{"version":3,"sources":["utils/constants.js","api/ajax.js","api/index.js","utils/memoryUtils.js","utils/storageUtils.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","components/link-button/index.jsx","utils/dateUtils.js","components/header/index.jsx","pages/home/home.jsx","pages/newsmanage/pictures-wall.jsx","pages/newsmanage/RichText.js","pages/newsmanage/FileWall.js","pages/newsmanage/WriteNews.js","pages/newsmanage/ManageNews.js","pages/role/add-form.jsx","pages/role/auth-form.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/not-found/not-found.jsx","pages/bannermanage/PicWall.js","pages/bannermanage/BannerManage.js","pages/newsmanage/ArticleDetail.js","pages/noticesmanage/ManageNotice.js","pages/noticesmanage/WriteNotice.js","pages/noticesmanage/Detail.js","pages/bookfile/WriteNBookFile.js","pages/bookfile/BookFileManage.js","pages/bookfile/BookFileDetail.js","pages/departmentMessage/writeMessage.js","pages/departmentMessage/MessageManage.js","pages/departmentMessage/detail.js","pages/video/VideoWall.js","pages/video/VideoUpload.js","pages/video/VideoManage.js","pages/video/VideoDetail.js","components/result/Success.js","pages/mail/MailManage.js","pages/mail/MailCheck.js","pages/mail/MailDetail.js","pages/admin/admin.jsx","App.js","index.js"],"names":["BASE","PAGE_SIZE","BASE_IMG_URL","BASE_ZZ_DEPARTMENT","BASE_ALL_DEPARTMENT","ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","reqDeleteImg","name","reqAddBannerpic","bannerpic","reqAddVideos","video","reqDeleteArticleImg","reqDeleteFile","reqDeleteVideo","reqDeleteArticle","title","reqCheckedArticles","pageNum","pageSize","reqCheckedSearchArticles","_ref","searchName","searchType","Object","defineProperty","reqNotices","reqAddOrUpdateNotice","notice","_id","reqSearchNotices","_ref2","reqMailMessages","reqMailUncheckedMessages","reqMailUpdateStatus","content","reqDeleteMail","reqSearchMails","_ref3","reqBookFiles","reqDepartmentMessages","reqSearchBookFiles","_ref4","reqSearchMessages","_ref5","reqDeleteBookFile","reqDeleteMessages","reqDeleteNotice","reqSearchVideos","_ref6","reqVideos","reqDeleteVideos","reqAddOrUpdateArticle","article","reqAddOrUpdateBookFile","bookfile","reqAddOrUpdateDepartmentMessage","Dmessage","reqRoles","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","user","memoryUtils","storageUtils","saveUser","store","set","getUser","removeUser","remove","Item","es_form","Login","handleSubmit","event","preventDefault","_this","props","form","validateFields","asyncToGenerator","regenerator_default","a","mark","_callee","err","values","result","wrap","_context","prev","next","sent","console","log","status","success","history","replace","msg","stop","_x","_x2","apply","this","validatePwd","rule","value","callback","test","react_default","createElement","react_router","to","getFieldDecorator","className","onSubmit","rules","required","whitespace","min","max","initialValue","input","prefix","icon","style","color","placeholder","validator","es_button","htmlType","Component","WrapLogin","create","menuList","key","isPublic","children","SubMenu","menu","LeftNav","hasAuth","item","menus","indexOf","find","child","getMenuNodes_map","map","getMenuNodes","react_router_dom","path","location","pathname","reduce","pre","cItem","openKey","push","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","withRouter","LinkButton","assign","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","state","currentTime","now","dayPictureUrl","weather","getTime","intervalId","setInterval","setState","getTitle","forEach","logout","modal","confirm","onOk","assertThisInitialized","clearInterval","onClick","Title","Home","typography","level","PicturesWall","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","previewVisible","previewImage","fileList","getImgs","file","handleCancel","handlePreview","thumbUrl","handleChange","_result$data","imgs","img","index","uid","_this$state","uploadButton","upload","action","accept","listType","onPreview","onChange","visible","footer","onCancel","alt","width","src","React","EditorDemo","onEditorStateChange","editorState","preview","window","previewWindow","close","open","document","write","buildPreviewHtml","getDetail","toHTML","handleEditorChange","uploadImageCallBack","xhr","XMLHttpRequest","FormData","append","send","addEventListener","JSON","parse","responseText","ContentUtils","insertMedias","link","html","detail","BraftEditor","createEditorState","concat","extendControls","component","showUploadList","customRequest","data-title","text","dist_default","excludeControls","contentStyle","minHeight","fontSize","lineHeight","imageControls","FileWall","getUrls","Option","WriteNews","submit","author","department","category","thumbnail","download_url","pw","current","editor","fw","isUpdate","createRef","card","labelCol","xs","span","sm","wrapperCol","WriteNews_Item","label","es_select","handleSelectChange","enum","pictures_wall_PicturesWall","ref","RichText_EditorDemo","FileWall_FileWall","marginLeft","block","newsmanage_WriteNews","Column","ManageNews","total","articles","loading","getNews","list","deleteArticle","_onOk","_callee2","_context2","_this2","_this$state2","head","ManageNews_Option","margin","target","table","rowKey","pagination","defaultPageSize","showQuickJumper","dataSource","dataIndex","render","divider","AddForm","setForm","add_form_Item","add_form","TreeNode","AuthForm","getMenus","checkedKeys","getTreeNodes","onCheck","treeNodes","nextProps","auth_form_Item","disabled","tree","checkable","defaultExpandAll","PureComponent","Role","roles","isShowAdd","isShowAuth","initColumn","columns","create_time","getRoles","onRow","addRole","resetFields","toConsumableArray","updateRole","_callee3","_context3","auth","auth_time","auth_name","role_id","bordered","rowSelection","selectedRowKeys","onSelect","auth_form_AuthForm","UserForm","_this$props","user_form_Item","user_form_Option","user_form","User","users","isShow","initColumns","roleNames","showUpdate","deleteUser","initRoleNames","showAdd","getUsers","addOrUpdateUser","getFieldsValue","NotFound","row","col","PicWall","BannerManage","url_address","BannerManage_Item","bannermanage_PicWall","bannermanage_BannerManage","es_list","ArticleDetail","_this$props$location$","titleHead","marginRight","goBack","ArticleDetail_Item","dangerouslySetInnerHTML","__html","ManageNotice","notices","getNotices","ManageNotice_Option","ManageNotice_Column","WriteNotice","WriteNotice_Item","WriteNotice_Option","noticesmanage_WriteNotice","NoticeDetail","Detail_Item","WriteBookFile","WriteNBookFile_Item","WriteNBookFile_Option","WriteNBookFile","BookFileManage","bookfiles","getBookFiles","deleteBookFile","BookFileManage_Option","BookFileManage_Column","BookFileDetail","BookFileDetail_Item","WriteMessage","writeMessage_Item","writeMessage","MessageManage","Dmessages","MessageManage_Option","MessageManage_Column","MessageDetail","detail_Item","VideoWall","TextArea","VideoUpload","desc","attr","main_actor","director","VideoUpload_Item","VideoUpload_Option","autosize","minRows","maxRows","VideoWall_VideoWall","video_VideoUpload","VideoManage","videos","getVideos","deleteVideo","VideoManage_Option","VideoManage_Column","VideoDetail","VideoDetail_Item","Success","es_result","subTitle","extra","MailManage","Mailmessages","getMail","deleteMail","Mailmessage","MailManage_Option","MailManage_Column","leader","MailCheck","UnCheckedMails","getUnCheckedMails","checkedMail","mail","MailCheck_Column","MailDetail","MailDetail_Item","Footer","Sider","Content","Admin","layout","components_left_nav","components_header","backgroundColor","from","exact","textAlign","App","ReactDOM","App_App","getElementById"],"mappings":"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","file":"static/js/main.364d8b4e.chunk.js","sourcesContent":["/*\r\n包含一些常量值的模块\r\n */\r\nexport const BASE = 'http://localhost:5000'\r\n// const BASE = 'http://28.27.40.77'\r\nexport const PAGE_SIZE = 10 // 每页显示的记录数\r\nexport const BASE_IMG_URL = BASE + '/public/image/articles/' // 上传图片的基础路径\r\nexport const BASE_PICSHOW_URL = BASE + '/public/image/picshow/'\r\nexport const BASE_MUSIC_URL = BASE + '/public/music/' //上传音乐的基础路径\r\nexport const BASE_SOFTWARE_URL = BASE + '/public/software/' //上传软件的基础路径\r\nexport const BASE_VIDEO_URL = BASE + '/public/video/' //上传视频的基础路径\r\n\r\n//所有强军动态的五个单位\r\nexport const BASE_ZZ_DEPARTMENT = [\r\n    '组织办', '人力资源办', '宣传保卫办', '部队管理办', '战勤办',\r\n]\r\n//场站的所有单位\r\nexport const BASE_ALL_DEPARTMENT = [\r\n    '场站参谋部', '场站政治工作处',\r\n    '财务股', '军需股', '油料股', '运输股', '机场营房股', '航材军械股', '飞行管制室', '气象台', '医院',\r\n    '通信导航连', '警卫连', '汽车连', '场务连', '四站连'\r\n]\r\n\r\n","/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url, data={}, type='GET') {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n    // 1. 执行异步ajax请求\r\n    if(type==='GET') { // 发GET请求\r\n      promise = axios.get(url, { // 配置对象\r\n        params: data // 指定请求参数\r\n      })\r\n    } else { // 发POST请求\r\n      promise = axios.post(url, data)\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise.then(response => {\r\n      resolve(response.data)\r\n    // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n    }).catch(error => {\r\n      // reject(error)\r\n      message.error('请求出错了: ' + error.message)\r\n    })\r\n  })\r\n\r\n\r\n}\r\n\r\n// 请求登陆接口\r\n// ajax('/login', {username: 'Tom', passsword: '12345'}, 'POST').then()\r\n// 添加用户\r\n// ajax('/manage/user/add', {username: 'Tom', passsword: '12345', phone: '13712341234'}, 'POST').then()\r\n","/*\r\n要求: 能根据接口文档定义接口请求\r\n包含应用中所有接口请求函数的模块\r\n每个函数的返回值都是promise\r\n\r\n基本要求: 能根据接口文档定义接口请求函数\r\n */\r\nimport { BASE } from '../utils/constants'\r\nimport ajax from './ajax'\r\n\r\n// 登陆\r\nexport const reqLogin = (username, password) => ajax(BASE + '/user/login', { username, password }, 'POST')\r\n\r\n// 删除指定名称的图片(修改)\r\nexport const reqDeleteImg = (name) => ajax(BASE + '/imageFile/bannerdelete', { name }, 'POST')\r\n//获取banner图片的地址\r\nexport const reqGetBannerImg = (urlList) => ajax(BASE + '/imageFile/getBannerList', { urlList })\r\n//获取新闻列表\r\nexport const reqGetNews = (list) => ajax(BASE + '/article/getList', { list })\r\n//获取分页的新闻列表（新闻待审核的）\r\nexport const reqArticles = (pageNum, pageSize) => ajax(BASE + '/article/list', { pageNum, pageSize })\r\n//添加新闻页面\r\nexport const reqAddArticles = (aritcle) => ajax(BASE + '/article/add', aritcle, 'POST')\r\nexport const reqAddBannerpic = (bannerpic) => ajax(BASE + '/banner/add', bannerpic, 'POST')\r\n\r\n//添加视频介绍界面\r\nexport const reqAddVideos = (video) => ajax(BASE + '/video/add', video, 'POST')\r\n\r\n//制定删除新闻缩略图y\r\nexport const reqDeleteArticleImg = (name) => ajax(BASE + '/articlesImg/delete', { name }, 'POST')\r\n//删除文章中的文件\r\nexport const reqDeleteFile = (name) => ajax(BASE + '/file/delete', { name }, 'POST')\r\n\r\n//指定删除视频\r\nexport const reqDeleteVideo = (name) => ajax(BASE + '/videoFile/delete', { name }, 'POST')\r\n//删除指定音乐\r\n\r\n//更新文章状态（是否审核过，审核过状态为true，未审核状态为false）\r\nexport const reqArticleUpdateStatus = (title) => ajax(BASE + '/article/updateStatus', { title }, 'POST')\r\n//删除新闻(根据文章title删除文章)\r\nexport const reqDeleteArticle = (title) => ajax(BASE + '/article/delete', { title }, 'POST')\r\n//获取分页的新闻列表（新闻经过审核过的）\r\nexport const reqCheckedArticles = (pageNum, pageSize) => ajax(BASE + '/article/checkedlist', { pageNum, pageSize })\r\nexport const reqCheckedSearchArticles = ({ pageNum, pageSize, searchName, searchType }) => ajax(BASE + '/article/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\n//CZ通知列表\r\nexport const reqNotices = (pageNum, pageSize) => ajax(BASE + '/list/notices', { pageNum, pageSize })\r\nexport const reqAddOrUpdateNotice = (notice) => ajax(BASE + '/notices/' + (notice._id ? 'update' : 'add'), notice, 'POST')\r\nexport const reqSearchNotices = ({ pageNum, pageSize, searchName, searchType }) => ajax(BASE + '/notices/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\n//cz邮件类的请求\r\n//获取经过审核的邮件列表\r\nexport const reqMailMessages = (pageNum, pageSize) => ajax(BASE + '/mail/checkedList', { pageNum, pageSize })\r\n//获取未经过审核（查看的）邮件列表\r\nexport const reqMailUncheckedMessages = (pageNum, pageSize) => ajax(BASE + '/mail/listUnchecked', { pageNum, pageSize })\r\n\r\n\r\nexport const reqMailUpdateStatus = (content) => ajax(BASE + '/mail/updateStatus', { content }, 'POST')\r\n\r\nexport const reqDeleteMail = (_id) => ajax(BASE + '/mail/delete', { _id }, 'POST')\r\n//查看邮箱\r\nexport const reqSearchMails = ({ pageNum, pageSize, searchName, searchType }) => ajax(BASE + '/mail/search', { pageNum, pageSize, [searchType]: searchName, })\r\n\r\n//教案类的请求\r\nexport const reqBookFiles = (pageNum, pageSize) => ajax(BASE + '/bookfile/list', { pageNum, pageSize })\r\n//获取科室动态（消息）\r\nexport const reqDepartmentMessages = (pageNum, pageSize) => ajax(BASE + '/departmentMessage/list', { pageNum, pageSize })\r\nexport const reqSearchBookFiles = ({ pageNum, pageSize, searchName, searchType }) => ajax(BASE + '/bookfile/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\nexport const reqSearchMessages = ({ pageNum, pageSize, searchName, searchType }) => ajax(BASE + '/departmentMessage/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\nexport const reqDeleteBookFile = (title) => ajax(BASE + '/bookfile/delete', { title }, 'POST')\r\nexport const reqDeleteMessages = (title) => ajax(BASE + '/departmentMessage/delete', { title }, 'POST')\r\n\r\nexport const reqDeleteNotice = (title) => ajax(BASE + '/notices/delete', { title }, 'POST')\r\n\r\n//获取分页的视频列表\r\nexport const reqSearchVideos = ({ pageNum, pageSize, searchName, searchType }) => ajax(BASE + '/video/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\n//获取分页的软件\r\nexport const reqVideos = (pageNum, pageSize) => ajax(BASE + '/video/list', { pageNum, pageSize })\r\n//获取分页的视频\r\n//删除视频\r\nexport const reqDeleteVideos = (title) => ajax(BASE + '/video/delete', { title }, 'POST')\r\n//增加通知\r\nexport const reqAddNotices = (notice) => ajax(BASE + '/notices/add', notice, 'POST')\r\n//增加教案\r\nexport const reqAddBookFiles = (bookfile) => ajax(BASE + '/bookfile/add', bookfile, 'POST')\r\n//增加科室动态（消息）\r\nexport const reqAddDepartmentMessage = (Dmessage) => ajax(BASE + '/departmentMessage/add', Dmessage, 'POST')\r\nexport const reqAddOrUpdateArticle = (article) => ajax(BASE + '/article/' + (article._id ? 'update' : 'add'), article, 'POST')\r\n//修改文章\r\nexport const reqAddOrUpdateBookFile = (bookfile) => ajax(BASE + '/bookfile/' + (bookfile._id ? 'update' : 'add'), bookfile, 'POST')\r\nexport const reqAddOrUpdateDepartmentMessage = (Dmessage) => ajax(BASE + '/departmentMessage/' + (Dmessage._id ? 'update' : 'add'), Dmessage, 'POST')\r\n\r\n// 获取所有角色的列表\r\nexport const reqRoles = () => ajax(BASE + '/role/list')\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE + '/role/add', { roleName }, 'POST')\r\n// 添加角色\r\nexport const reqUpdateRole = (role) => ajax(BASE + '/role/update', role, 'POST')\r\n\r\n\r\n// 获取所有用户的列表\r\nexport const reqUsers = () => ajax(BASE + '/user/list')\r\n// 删除指定用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE + '/user/delete', { userId }, 'POST')\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/user/' + (user._id ? 'update' : 'add'), user, 'POST')\r\n","/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n  user: {}, // 保存当前登陆的user\r\n}","/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n    store.set(USER_KEY, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    // localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY)\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Button,\r\n  message\r\n} from 'antd'\r\nimport './login.less'\r\n// import logo from '../../assets/images/logo.png'\r\nimport { reqLogin } from '../../api'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\n\r\n\r\nconst Item = Form.Item // 不能写在import之前\r\n\r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n\r\n  handleSubmit = (event) => {\r\n\r\n    // 阻止事件的默认行为\r\n    event.preventDefault()\r\n\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // console.log('提交登陆的ajax请求', values)\r\n        // 请求登陆\r\n        const { username, password } = values\r\n        const result = await reqLogin(username, password) // {status: 0, data: user}  {status: 1, msg: 'xxx'}\r\n        console.log('请求成功', result)\r\n        if (result.status === 0) { // 登陆成功\r\n          // 提示登陆成功\r\n          message.success('登陆成功')\r\n          // 保存user\r\n          const user = result.data\r\n          memoryUtils.user = user // 保存在内存中\r\n          storageUtils.saveUser(user) // 保存到local中\r\n\r\n          // 跳转到管理界面 (不需要再回退回到登陆)\r\n          this.props.history.replace('/')\r\n\r\n        } else { // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg)\r\n        }\r\n\r\n      } else {\r\n        console.log('检验失败!')\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  }\r\n\r\n  /*\r\n  对密码进行自定义验证\r\n  */\r\n  /*\r\n   用户名/密码的的合法性要求\r\n     1). 必须输入\r\n     2). 必须大于等于4位\r\n     3). 必须小于等于12位\r\n     4). 必须是英文、数字或下划线组成\r\n    */\r\n  validatePwd = (rule, value, callback) => {\r\n    console.log('validatePwd()', rule, value)\r\n    if (!value) {\r\n      callback('密码必须输入')\r\n    } else if (value.length < 4) {\r\n      callback('密码长度不能小于4位')\r\n    } else if (value.length > 12) {\r\n      callback('密码长度不能大于12位')\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback('密码必须是英文、数字或下划线组成')\r\n    } else {\r\n      callback() // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  }\r\n\r\n  render() {\r\n\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const user = memoryUtils.user\r\n    if (user && user._id) {\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    // 得到具强大功能的form对象\r\n    const form = this.props.form\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          {/* <img src={logo} alt=\"logo\"/> */}\r\n          <h1>强军网后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {\r\n                /*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */\r\n              }\r\n              {\r\n                getFieldDecorator('username', { // 配置对象: 属性名是特定的一些名称\r\n                  // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                  rules: [\r\n                    { required: true, whitespace: true, message: '用户名必须输入' },\r\n                    { min: 1, message: '用户名至少4位' },\r\n                    { max: 12, message: '用户名最多12位' },\r\n                    {/* { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' }, */ }\r\n                  ],\r\n                  initialValue: 'admin', // 初始值\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"用户名\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Form.Item>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  rules: [\r\n                    {\r\n                      validator: this.validatePwd\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                  />\r\n                )\r\n              }\r\n\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n1. 高阶函数\r\n    1). 一类特别的函数\r\n        a. 接受函数类型的参数\r\n        b. 返回值是函数\r\n    2). 常见\r\n        a. 定时器: setTimeout()/setInterval()\r\n        b. Promise: Promise(() => {}) then(value => {}, reason => {})\r\n        c. 数组遍历相关的方法: forEach()/filter()/map()/reduce()/find()/findIndex()\r\n        d. 函数对象的bind()\r\n        e. Form.create()() / getFieldDecorator()()\r\n    3). 高阶函数更新动态, 更加具有扩展性\r\n\r\n2. 高阶组件\r\n    1). 本质就是一个函数\r\n    2). 接收一个组件(被包装组件), 返回一个新的组件(包装组件), 包装组件会向被包装组件传入特定属性\r\n    3). 作用: 扩展组件的功能\r\n    4). 高阶组件也是高阶函数: 接收一个组件函数, 返回是一个新的组件函数\r\n */\r\n/*\r\n包装Form组件生成一个新的组件: Form(Login)\r\n新组件会向Form组件传递一个强大的对象属性: form\r\n */\r\nconst WrapLogin = Form.create()(Login)\r\nexport default WrapLogin\r\n/*\r\n1. 前台表单验证\r\n2. 收集表单输入数据\r\n */\r\n\r\n/*\r\nasync和await\r\n1. 作用?\r\n   简化promise对象的使用: 不用再使用then()来指定成功/失败的回调函数\r\n   以同步编码(没有回调函数了)方式实现异步流程\r\n2. 哪里写await?\r\n    在返回promise的表达式左侧写await: 不想要promise, 想要promise异步执行的成功的value数据\r\n3. 哪里写async?\r\n    await所在函数(最近的)定义的左侧写async\r\n */","const menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    isPublic: true, // 公开的\r\n  },\r\n  {\r\n    title: '通知管理',\r\n    key: '/noticesManage',\r\n    icon: 'sound',\r\n    children: [\r\n      {\r\n        title: '发通知',\r\n        key: '/noticesManage/add',\r\n        icon: 'notification'\r\n      },\r\n      {\r\n        title: '管理通知',\r\n        key: '/noticesManage/manage',\r\n        icon: 'message'\r\n      },]\r\n  },\r\n  {\r\n    title: '精品课程',\r\n    key: '/newsManage',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '写文章',\r\n        key: '/writenews',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '管理文章',\r\n        key: '/managenews',\r\n        icon: 'search'\r\n      },\r\n    ]\r\n  },\r\n  {\r\n    title: '科室动态管理',\r\n    key: '/departmentMessage',\r\n    icon: 'book',\r\n    children: [\r\n      {\r\n        title: '发布科室动态',\r\n        key: '/departmentMessage/write',\r\n        icon: 'file-add'\r\n      },\r\n      {\r\n        title: '内容管理',\r\n        key: '/departmentMessage/manage',\r\n        icon: 'file'\r\n      },\r\n\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '视频管理',\r\n    key: '/media/video',\r\n    icon: 'play-square',\r\n    children: [\r\n      {\r\n        title: '视频上传',\r\n        key: '/mdeia/videoupload',\r\n        icon: 'upload'\r\n      },\r\n      {\r\n        title: '视频管理',\r\n        key: '/mdeia/videomanage',\r\n        icon: 'video-camera'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'safety',\r\n  },\r\n  {\r\n    title: '留言管理',\r\n    key: 'mail',\r\n    icon: 'mail',\r\n    children: [\r\n      {\r\n        title: '已审核留言',\r\n        key: '/mail/checked',\r\n        icon: 'vertical-align-top'\r\n      },\r\n      {\r\n        title: '未审核留言',\r\n        key: '/mail/unchecked',\r\n        icon: 'line-chart'\r\n      },\r\n    ]\r\n  },\r\n]\r\n\r\nexport default menuList","import React, {Component} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport {Menu, Icon} from 'antd';\r\n\r\n// import logo from '../../assets/images/logo.png'\r\nimport menuList from '../../config/menuConfig'\r\nimport './index.less'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass LeftNav extends Component {\r\n\r\n  /*\r\n  判断当前登陆用户对item是否有权限\r\n   */\r\n  hasAuth = (item) => {\r\n    const {key, isPublic} = item\r\n\r\n    const menus = memoryUtils.user.role.menus\n\tconsole.log(menus)\r\n    const username = memoryUtils.user.username\r\n    /*\r\n    1. 如果当前用户是admin\r\n    2. 如果当前item是公开的\r\n    3. 当前用户有此item的权限: key有没有menus中\r\n     */\r\n    if(username==='admin' || isPublic || menus.indexOf(key)!==-1) {\r\n      return true\r\n    } else if(item.children){ // 4. 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child =>  menus.indexOf(child.key)!==-1)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用map() + 递归调用\r\n  */\r\n  getMenuNodes_map = (menuList) => {\r\n    return menuList.map(item => {\r\n      /*\r\n        {\r\n          title: '首页', // 菜单标题名称\r\n          key: '/home', // 对应的path\r\n          icon: 'home', // 图标名称\r\n          children: [], // 可能有, 也可能没有\r\n        }\r\n\r\n        <Menu.Item key=\"/home\">\r\n          <Link to='/home'>\r\n            <Icon type=\"pie-chart\"/>\r\n            <span>首页</span>\r\n          </Link>\r\n        </Menu.Item>\r\n\r\n        <SubMenu\r\n          key=\"sub1\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"mail\"/>\r\n              <span>商品</span>\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item/>\r\n          <Menu.Item/>\r\n        </SubMenu>\r\n      */\r\n      if(!item.children) {\r\n        return (\r\n          <Menu.Item key={item.key}>\r\n            <Link to={item.key}>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        )\r\n      } else {\r\n        return (\r\n          <SubMenu\r\n            key={item.key}\r\n            title={\r\n              <span>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </span>\r\n            }\r\n          >\r\n            {this.getMenuNodes(item.children)}\r\n          </SubMenu>\r\n        )\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用reduce() + 递归调用\r\n  */\r\n  getMenuNodes = (menuList) => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname\r\n\r\n    return menuList.reduce((pre, item) => {\r\n\r\n      // 如果当前用户有item对应的权限, 才需要显示对应的菜单项\r\n      if (this.hasAuth(item)) {\r\n        // 向pre添加<Menu.Item>\r\n        if(!item.children) {\r\n          pre.push((\r\n            <Menu.Item key={item.key}>\r\n              <Link to={item.key}>\r\n                <Icon type={item.icon}/>\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          ))\r\n        } else {\r\n\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key\r\n          }\r\n\r\n\r\n          // 向pre添加<SubMenu>\r\n          pre.push((\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          ))\r\n        }\r\n      }\r\n\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  /*\r\n  在第一次render()之前执行一次\r\n  为第一个render()准备数据(必须同步的)\r\n   */\r\n  componentWillMount () {\r\n    this.menuNodes = this.getMenuNodes(menuList)\r\n  }\r\n\r\n  render() {\r\n    // debugger\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname\r\n    console.log('render()', path)\r\n    if(path.indexOf('/article')===0) { // 当前请求的是新闻列表或其子路由界面\r\n      path = '/checknews'\r\n    }\r\n\r\n    // 得到需要打开菜单项的key\r\n    const openKey = this.openKey\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link to='/' className=\"left-nav-header\">\r\n          {/* <img src={logo} alt=\"logo\"/> */}\r\n          <h2>强军网后台管理系统</h2>\r\n        </Link>\r\n\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n\r\n          {\r\n            this.menuNodes\r\n          }\r\n\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default withRouter(LeftNav)","import React from 'react'\r\nimport './index.less'\r\n/*\r\n外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>\r\n}","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, {Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Modal} from 'antd'\r\n\r\nimport LinkButton from '../link-button'\r\n// import {reqWeather} from '../../api'\r\nimport menuList from '../../config/menuConfig'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport './index.less'\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n\r\n  state = {\r\n    currentTime: formateDate(Date.now()), // 当前时间字符串\r\n    dayPictureUrl: '', // 天气图片url\r\n    weather: '', // 天气的文本\r\n  }\r\n\r\n  getTime = () => {\r\n    // 每隔1s获取当前时间, 并更新状态数据currentTime\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = formateDate(Date.now())\r\n      this.setState({currentTime})\r\n    }, 1000)\r\n  }\r\n\r\n  // getWeather = async () => {\r\n  //   // 调用接口请求异步获取数据\r\n  //   const {dayPictureUrl, weather} = await reqWeather('南充')\r\n  //   // 更新状态\r\n  //   this.setState({dayPictureUrl, weather})\r\n  // }\r\n\r\n  getTitle = () => {\r\n    // 得到当前请求路径\r\n    const path = this.props.location.pathname\r\n    let title\r\n    menuList.forEach(item => {\r\n      if (item.key===path) { // 如果当前item对象的key与path一样,item的title就是需要显示的title\r\n        title = item.title\r\n      } else if (item.children) {\r\n        // 在所有子item中查找匹配的\r\n        const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n        // 如果有值才说明有匹配的\r\n        if(cItem) {\r\n          // 取出它的title\r\n          title = cItem.title\r\n        }\r\n      }\r\n    })\r\n    return title\r\n  }\r\n\r\n  /*\r\n  退出登陆\r\n   */\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: '确定退出吗?',\r\n      onOk: () => {\r\n        console.log('确定', this)\r\n        // 删除保存的user数据\r\n        storageUtils.removeUser()\r\n        memoryUtils.user = {}\r\n\r\n        // 跳转到login\r\n        this.props.history.replace('/login')\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  第一次render()之后执行一次\r\n  一般在此执行异步操作: 发ajax请求/启动定时器\r\n   */\r\n  componentDidMount () {\r\n    // 获取当前的时间\r\n    this.getTime()\r\n    // 获取当前天气\r\n    // this.getWeather()\r\n  }\r\n  /*\r\n  // 不能这么做: 不会更新显示\r\n  componentWillMount () {\r\n    this.title = this.getTitle()\r\n  }*/\r\n\r\n  /*\r\n  当前组件卸载之前调用\r\n   */\r\n  componentWillUnmount () {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {currentTime} = this.state\r\n\r\n    const username = memoryUtils.user.username\r\n\r\n    // 得到当前需要显示的title\r\n    const title = this.getTitle()\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎, {username}</span>\r\n          <LinkButton onClick={this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{title}</div>\r\n          <div className=\"header-bottom-right\">\r\n            <span>{currentTime}</span>\r\n            {/* <img src={dayPictureUrl} alt=\"weather\"/>\r\n            <span>{weather}</span> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React, { Component } from 'react'\r\nimport { Typography } from 'antd';\r\nimport './home.less'\r\nimport storageUtils from '../../utils/storageUtils'\r\nconst { Title } = Typography;\r\n\r\n\r\nexport default class Home extends Component {\r\n\r\n\r\n  render() {\r\n    const user = storageUtils.getUser()//获取用户登录的用户名\r\n    return (\r\n      <div className='home'>\r\n        <Typography>\r\n          <Title level={2}>{user.username === 'admin' ? '超级管理员' : user.username}，欢迎来到强军网后台管理系统</Title>\r\n\r\n        </Typography>\r\n      </div>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Upload, Icon, Modal, message } from 'antd'\r\nimport { reqDeleteArticleImg} from '../../api'\r\nimport {BASE_IMG_URL} from \"../../utils/constants\";\r\n/*\r\n用于新闻中图片上传的组件\r\n */\r\nexport default class PicturesWall extends React.Component {\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  }\r\n  state = {\r\n    previewVisible: false, // 标识是否显示大图预览Modal\r\n    previewImage: '', // 大图的url\r\n    fileList: [],\r\n  }\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    let fileList = []\r\n\r\n    // 如果传入了imgs属性\r\n    const { imgs } = this.props\r\n    console.log(imgs)\r\n    if (imgs && imgs.length > 0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index, // 每个file都有自己唯一的id\r\n        name: img, // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: BASE_IMG_URL + img\r\n      }))\r\n    }\r\n\r\n    // 初始化状态\r\n    this.state = {\r\n      previewVisible: false, // 标识是否显示大图预览Modal\r\n      previewImage: '', // 大图的url\r\n      fileList // 所有已上传图片的数组\r\n    }\r\n  }\r\n\r\n/*\r\n  获取所有已上传图片文件名的数组\r\n   */\r\n  getImgs  = () => {\r\n    return this.state.fileList.map(file => file.name)  \r\n  };\r\n\r\n  /*\r\n  隐藏Modal\r\n   */\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = file => {\r\n    console.log('handlePreview()', file)\r\n    // 显示指定file对应的大图\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  /*\r\n  file: 当前操作的图片文件(上传/删除)\r\n  fileList: 所有已上传图片文件对象的数组\r\n   */\r\n  handleChange = async ({ file, fileList }) => {\r\n    console.log('handleChange()', file.status, fileList.length, file===fileList[fileList.length-1])\r\n\r\n    // 一旦上传成功, 将当前上传的file的信息修正(name, url)\r\n    if(file.status==='done') {\r\n      const result = file.response  // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\r\n      console.log(result)\r\n      if(result.status===0) {\r\n        message.success('上传图片成功!')\r\n        const {name, url} = result.data\r\n        file = fileList[fileList.length-1]\r\n        file.name = name\r\n        file.url = url\r\n      } else {\r\n        message.error('上传图片失败')\r\n      }\r\n    } else if (file.status==='removed') { // 删除图片\r\n      const result = await reqDeleteArticleImg(file.name)\r\n      if (result.status===0) {\r\n        message.success('删除图片成功!')\r\n      } else {\r\n        message.error('删除图片失败!')\r\n      }\r\n    }\r\n\r\n    // 在操作(上传/删除)过程中更新fileList状态\r\n    this.setState({ fileList })\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/articlesImg/uploads\" /*上传图片的接口地址*/\r\n          accept='image/*'  /*只接收图片格式*/\r\n          name='article-img' /*请求参数名*/\r\n          listType=\"picture-card\"  /*卡片样式*/\r\n          fileList={fileList}  /*所有已上传图片文件对象的数组*/\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 1 ? null : uploadButton}\r\n        </Upload>\r\n\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react'\nimport { Upload, Icon } from 'antd'\n// 引入编辑器组件\nimport PropTypes from 'prop-types'\nimport BraftEditor from 'braft-editor'\nimport { ContentUtils } from 'braft-utils'\nimport { BASE_IMG_URL } from '../../utils/constants'\n// 引入编辑器样式\nimport 'braft-editor/dist/index.css'\nimport 'braft-editor/dist/output.css'\n\nexport default class EditorDemo extends React.Component {\n    static propTypes = {\n        detail: PropTypes.string\n    }\n\n    // state = {\n    //     // 创建一个空的editorState作为初始值\n    //     editorState: BraftEditor.createEditorState(null)\n    // }\n    constructor(props) {\n        super(props)\n        const html = this.props.detail\n        if (html) { // 如果有值, 根据html格式字符串创建一个对应的编辑对象\n\n            const editorState = BraftEditor.createEditorState(html)\n            this.state = {\n                editorState,\n            }\n        } else {\n            this.state = {\n                // editorState: BraftEditor.createEmpty(), // 创建一个没有内容的编辑对象\n                editorState: BraftEditor.createEditorState(null)\n            }\n        }\n\n    }\n    /*\n     输入过程中实时的回调\n      */\n    onEditorStateChange = (editorState) => {\n        console.log('onEditorStateChange()')\n        this.setState({\n            editorState,\n        })\n    }\n    preview = () => {\n\n        if (window.previewWindow) {\n            window.previewWindow.close()\n        }\n\n        window.previewWindow = window.open()\n        window.previewWindow.document.write(this.buildPreviewHtml())\n        window.previewWindow.document.close()\n\n    }\n    buildPreviewHtml() {\n\n        return `\n      <!Doctype html>\n      <html>\n        <head>\n          <title>文章预览界面</title>\n          <style>\n            html,body{\n              height: 100%;\n              margin: 0;\n              padding: 0;\n              overflow: auto;\n              background-color: #f1f2f3;\n            }\n            .container{\n              box-sizing: border-box;\n              width: 1000px;\n              max-width: 100%;\n              min-height: 100%;\n              margin: 0 auto;\n              padding: 30px 20px;\n              overflow: hidden;\n              background-color: #fff;\n              border-right: solid 1px #eee;\n              border-left: solid 1px #eee;\n            }\n            .container img,\n            .container audio,\n            .container video{\n              max-width: 100%;\n              height: auto;\n            }\n            .container p{\n              white-space: pre-wrap;\n              min-height: 1em;\n            }\n            .container pre{\n              padding: 15px;\n              background-color: #f1f1f1;\n              border-radius: 5px;\n            }\n            .container blockquote{\n              margin: 0;\n              padding: 15px;\n              background-color: #f1f1f1;\n              border-left: 3px solid #d1d1d1;\n            }\n          </style>\n        </head>\n        <body>\n          <div class=\"container braft-output-content\">${this.state.editorState.toHTML()}</div>\n        </body>\n      </html>\n    `\n\n    }\n    getDetail = () => {\n        // 返回输入数据对应的html格式的文本\n        // return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\n        return this.state.editorState.toHTML()\n    }\n\n\n    handleEditorChange = (editorState) => {\n        this.setState({ editorState })\n    }\n\n    uploadImageCallBack = (file) => {\n        console.log(file.file.name, file.file.type)\n        return new Promise(\n            (resolve, reject) => {\n                const xhr = new XMLHttpRequest()\n                xhr.open('POST', '/articlesImg/uploads')\n                const data = new FormData()\n                console.log(file)\n                data.append('article-img', file.file)\n                xhr.send(data)\n                console.log(data)\n                xhr.addEventListener('load', () => {\n                    const response = JSON.parse(xhr.responseText)\n                    // const response = xhr.responseText\n                    console.log(response)\n                    const url = BASE_IMG_URL + response.data.name // 得到图片的url\n                    console.log(url)\n                    const editorState = ContentUtils.insertMedias(this.state.editorState, [\n                        {\n                            type: 'IMAGE',\n                            url: url,\n                        }\n                    ])\n                    this.setState({ editorState })\n                    resolve({ data: { link: url } })\n                })\n                xhr.addEventListener('error', () => {\n                    const error = JSON.parse(xhr.responseText)\n                    reject(error)\n                })\n            }\n        )\n    }\n    render() {\n        const imageControls = [\n            'align-center',\n            'size',\n            'remove'\n        ]\n        const { editorState } = this.state;\n        const extendControls = [\n            {\n                key: 'antd-uploader',\n                type: 'component',\n                component: (\n                    <Upload\n                        accept=\"image/*\"\n                        showUploadList={false}\n                        customRequest={this.uploadImageCallBack}\n                    >\n                        {/* 这里的按钮最好加上type=\"button\"，以避免在表单容器中触发表单提交，用Antd的Button组件则无需如此 */}\n                        <button type=\"button\" className=\"control-item button upload-button\" data-title=\"插入图片\">\n                            <Icon type=\"picture\" theme=\"filled\" />\n                        </button>\n                    </Upload>\n                )\n            },\n            {\n                key: 'custom-button',\n                type: 'button',\n                text: '预览',\n                onClick: this.preview\n            }\n        ];\n        return (\n            <div>\n                <BraftEditor\n                    excludeControls={['media']}\n                    contentStyle={{ minHeight: 600, fontSize: '16px', lineHeight: '0px' }}\n                    value={editorState}\n                    onChange={this.handleEditorChange}\n                    extendControls={extendControls}\n                    imageControls={imageControls}\n                />\n            </div>\n        )\n\n    }\n}\n\n","import React from 'react'\nimport { Upload, Icon, Modal, message } from 'antd'\nimport { reqDeleteFile } from '../../api'\n/*\n用于文章中文件的上传的组件\n */\nexport default class FileWall extends React.Component {\n\n\n    state = {\n        previewVisible: false, // 标识是否显示大图预览Modal\n        previewImage: '', // 大图的url\n        fileList: [],\n    }\n    /*\n      获取所有已上传软件文件名的数组\n       */\n    getUrls = () => {\n        return this.state.fileList.map(file => file.name)\n    };\n\n    /*\n    隐藏Modal\n     */\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    handlePreview = file => {\n        console.log('handlePreview()', file)\n        // 显示指定file对应的大图\n        this.setState({\n            previewImage: file.url || file.thumbUrl,\n            previewVisible: true,\n        });\n    };\n\n    /*\n    file: 当前操作的文件(上传/删除)\n    fileList: 所有已上传文件对象的数组\n     */\n    handleChange = async ({ file, fileList }) => {\n        console.log('handleChange()', file.status, fileList.length, file === fileList[fileList.length - 1])\n\n        // 一旦上传成功, 将当前上传的file的信息修正(name, url)\n        if (file.status === 'done') {\n            const result = file.response  // {status: 0, data: {name: 'xxx.docx', url: '文件地址'}}\n            console.log(result)\n            if (result.status === 0) {\n                message.success('上传文件成功!')\n                const { name, url } = result.data\n                file = fileList[fileList.length - 1]\n                file.name = name\n                file.url = url\n            } else {\n                message.error('上传文件失败')\n            }\n        } else if (file.status === 'removed') { // 删除文件\n            const result = await reqDeleteFile(file.name)\n            if (result.status === 0) {\n                message.success('删除文件成功!')\n            } else {\n                message.error('删除文件失败!')\n            }\n        }\n        // 在操作(上传/删除)过程中更新fileList状态\n        this.setState({ fileList })\n    };\n\n    render() {\n        const { previewVisible, previewImage, fileList } = this.state;\n        const uploadButton = (\n            <div>\n                <Icon type=\"plus\" />\n                <div>Upload</div>\n            </div>\n        );\n        return (\n            <div>\n\n                <Upload\n                    action=\"/file/uploads\" /*上传文件的接口地址*/\n                    accept=\".doc,.docx,.xls,.xlsx,.txt,.pdf,.wps,.ppt,.pptx\"  /*只接收文件格式*/\n                    name='file' /*请求参数名*/\n                    listType=\"picture-card\"  /*卡片样式*/\n                    fileList={fileList}  /*所有已上传文章文件对象的数组*/\n                    onPreview={this.handlePreview}\n                    onChange={this.handleChange}\n                >\n                    {fileList.length >= 1 ? null : uploadButton}\n                </Upload>\n                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport PictureWall from './pictures-wall'\nimport { Card, Form, Input, Button, message, Select } from 'antd';\n// import RichTextEditor from './RichTextEditor';\nimport EditorDemo from './RichText.js'\nimport { BASE_ALL_DEPARTMENT } from '../../utils/constants'\nimport { reqAddOrUpdateArticle } from '../../api/index';\nimport FileWall from './FileWall';\nconst { Item } = Form\n// const { TextArea } = Input\nconst { Option } = Select;\n\n\nclass WriteNews extends Component {\n    constructor(props) {\n        super(props)\n        // 创建用来保存ref标识的标签对象的容器\n        this.pw = React.createRef() //创建保存缩略图的容器\n        this.editor = React.createRef() //创建保存编辑器的容器\n        this.fw = React.createRef() //创建用来保存文件地址的容器\n    }\n\n    submit = () => {\n        // 进行表单验证, 如果通过了, 才发送请求\n        this.props.form.validateFields(async (error, values) => {\n            if (!error) {\n                //1.收集数据，2调用接口请求函数添加3.根据结果提示\n                // console.log('ok')\n\n                const { title, author, department, category } = values//获取文章的标题，作者，单位和分类\n                const thumbnail = this.pw.current.getImgs()  //获取缩略图\n                const content = this.editor.current.getDetail()  //通过编辑器获得文章的内容\n                const download_url = this.fw.current.getUrls()//获取文章中文件的下载地址\n                const article = { title, author, department, thumbnail, category, content, download_url }\n                // 如果是更新, 需要添加_id\n                if (this.isUpdate) {\n                    article._id = this.article._id\n                }\n\n                // 2. 调用接口请求函数去添加/更新\n                const result = await reqAddOrUpdateArticle(article)\n                console.log(result.err)\n                // 3. 根据结果提示\n                if (result.err === 0) {\n                    message.success(`${this.isUpdate ? '更新' : '添加'}文章成功!`)\n                    this.props.history.push('/success', { article })\n                } else if (result.err === -999) {\n                    message.error('没有该权限，不要调皮')\n                } else if (result.err === -888) {\n                    message.error('登陆过期,请重新登陆')\n                }\n                else {\n                    message.error(`${this.isUpdate ? '更新' : '添加'}文章失败!`)\n                }\n\n            }\n        })\n\n    }\n    componentWillMount() {\n        // 取出携带的state\n        const article = this.props.location.state  // 如果是添加没值, 否则有值\n        // 保存是否是更新的标识\n        this.isUpdate = !!article\n        // 保存商品(如果没有, 保存是{})\n        this.article = article || {}\n    }\n\n    render() {\n        //    console.log(this.article.thumbnail[0])\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 2 },//左侧的宽度\n                sm: { span: 2 },\n            },\n            wrapperCol: {\n                xs: { span: 20 },//右侧的宽度\n                sm: { span: 20 },\n            },\n        };\n\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Card>\n                <Form {...formItemLayout}>\n                    <Item label=\"文章分类\">\n                        {getFieldDecorator('category', {\n                            initialValue: this.article.category,\n                            rules: [{ required: true, message: '必须选择文章分类!' }],\n                        })(\n                            <Select\n                                placeholder=\"请选择以下文章分类\"\n                                onChange={this.handleSelectChange}\n                            >\n                                <Option value=\"精品课程\">精品课程</Option>\n                                <Option value=\"案例分析\">案例分析</Option>\n                                <Option value=\"活动概况\">活动概况</Option>\n                            </Select>,\n                        )}\n                    </Item>\n                    <Item label='文章名'>\n                        {\n                            getFieldDecorator('title', {\n                                initialValue: this.article.title,\n                                rules: [\n                                    { required: true, message: '必须输入文章名称' },\n                                    { max: 50, message: '输入标题过长' }//设置标题名过长错误提示的规则\n                                ]\n                            })(<Input placeholder='请输入文章名称' />)\n                        }\n                    </Item>\n                    <Item label='文章作者'>\n                        {\n                            getFieldDecorator('author', {\n                                initialValue: this.article.author,\n                                rules: [\n                                    { required: true, message: '必须输入文章作者' },\n                                    { whitespace: true }\n                                ]\n                            })(<Input placeholder='请输入作者' />)\n                        }\n\n                    </Item>\n                    <Item label='文章单位'>\n                        {\n                            getFieldDecorator('department', {\n                                initialValue: this.article.department,\n                                rules: [\n                                    { required: true, message: '必须输入作者单位' },\n                                    { type: \"enum\", enum: BASE_ALL_DEPARTMENT }//设置了单位枚举类型\n\n                                ]\n                            })(<Input placeholder='请输入单位' />)\n                        }\n\n                    </Item>\n                    <Item label='文章封面图'>\n                        <PictureWall ref={this.pw} imgs={this.article.thumbnail} />\n                    </Item>\n                    <Item label=\"文章详情\" labelCol={{ span: 2 }} wrapperCol={{ span: 20 }}>\n                        <EditorDemo ref={this.editor} detail={this.article.content} />\n                    </Item>\n                    <Item label='文件上传'>\n                        <FileWall ref={this.fw} />\n                    </Item>\n                    <Item>\n                        <Button style={{ marginLeft: '10%' }}\n                            type='primary'\n                            block onClick={this.submit}>提交</Button>\n                    </Item>\n                </Form>\n            </Card>\n        )\n    }\n}\nexport default Form.create()(WriteNews)\n\n\n/*\n1. 子组件调用父组件的方法: 将父组件的方法以函数属性的形式传递给子组件, 子组件就可以调用\n2. 父组件调用子组件的方法: 在父组件中通过ref得到子组件标签对象(也就是组件对象), 调用其方法\n */\n\n/*\n使用ref\n1. 创建ref容器: thi.pw = React.createRef()\n2. 将ref容器交给需要获取的标签元素: <PictureWall ref={this.pw} />\n3. 通过ref容器读取标签元素: this.pw.current\n */","import React, { Component } from 'react';\nimport { Table, Divider, message, Modal, Select, Button, Input, Card } from 'antd';\nimport { PAGE_SIZE } from '../../utils/constants';\nimport LinkButton from '../../components/link-button';\nimport { reqCheckedArticles, reqDeleteArticle, reqCheckedSearchArticles } from '../../api'\nconst { Column } = Table;\nconst Option = Select.Option\n\n\n\nclass ManageNews extends Component {\n    state = {\n        total: 0, // 商品的总数量\n        articles: [], // 文章的数组\n        loading: false,//是否正在加载中\n        searchName: '', // 搜索的关键字\n        searchType: 'articleTitle', // 根据哪个字段搜索\n    }\n    //获取指定页码的列表数据表示\n    getNews = async (pageNum) => {\n        //发送请求之前，将loading效果设置为true\n        this.setState({ loading: true })\n        const { searchName, searchType } = this.state\n        let result\n        if (searchName) {\n            result = await reqCheckedSearchArticles({ pageNum, pageSize: PAGE_SIZE, searchName, searchType })\n        } else { // 一般分页请求\n            result = await reqCheckedArticles(pageNum, PAGE_SIZE)\n        }\n        // const result = await reqCheckedArticles(pageNum, PAGE_SIZE,searchName,searchType)\n        //请求结束之后将loading效果设置为false\n        this.setState({ loading: false })\n        if (result.status === 0) {\n            const { total, list } = result.data\n            console.log(list)\n            this.setState({\n                total,\n                articles: list\n            })\n        }\n    }\n    /*\n删除指定新闻\n*/\n    deleteArticle = (article) => {\n        Modal.confirm({\n            title: `确认删除****[${article.title}]****吗?`,\n            onOk: async () => {\n                const result = await reqDeleteArticle(article.title)\n                if (result.err === 0) {\n                    message.success('删除文章成功!')\n                    this.getNews(1)\n                } else if (result.err === -999) {\n                    message.error('对不起，你没有该权限')\n                } else if (result.err === -888) {\n                    message.error('登陆过期,请重新登陆')\n                } else {\n                    message.error('other error')\n                }\n            }\n        })\n    }\n\n\n    componentDidMount() {\n        this.getNews(1)\n    }\n    render() {\n        const { articles, total, loading, searchName, searchType } = this.state\n\n        const head = (\n            <span>\n                <Select\n                    value={searchType}\n                    style={{ width: 150 }}\n                    onChange={value => this.setState({ searchType: value })}\n                >\n                    <Option value='articleTitle'>按文章名搜索</Option>\n                    {/* <Option value='articleCategory'>按文章分类搜索</Option> */}\n                    <Option value='articleAuthor'>按文章作者搜索</Option>\n                    <Option value='articleContent'>按文章内容搜索</Option>\n                    <Option value='articleDepartment'>按文章单位搜索</Option>\n\n                </Select>\n                <Input\n                    placeholder='关键字'\n                    style={{ width: 150, margin: '0 15px' }}\n                    value={searchName}\n                    onChange={event => this.setState({ searchName: event.target.value })}\n                />\n                <Button type='primary' onClick={() => this.getNews(1)}>搜索</Button>\n            </span>\n        )\n        return (\n            <Card title={head}>\n                <Table\n\n                    rowKey='_id'\n                    loading={loading}\n                    //分页的配置对象\n                    pagination={{\n                        total,\n                        defaultPageSize: PAGE_SIZE,\n                        showQuickJumper: true,\n                        onChange: this.getNews,\n\n                    }}\n                    dataSource={articles}>\n                    <Column title=\"新闻名\" dataIndex=\"title\" />\n                    <Column title=\"作者\" dataIndex=\"author\" />\n                    <Column title=\"单位\" dataIndex=\"department\" />\n                    <Column title=\"发表时间\" dataIndex='time' />\n                    <Column\n                        title=\"处理\"\n                        key=\"action\"\n                        render={(article) => (\n                            <span>\n                                <LinkButton onClick={() => this.props.history.push('/article/detail', { article })}>详情</LinkButton>\n                                <Divider type=\"vertical\" />\n                                <LinkButton onClick={() => this.props.history.push('/writenews', article)}>修改</LinkButton>\n                                <Divider type='vertical' />\n                                <LinkButton onClick={() => this.deleteArticle(article)}>删除</LinkButton>\n\n                            </span>\n                        )}\n                    />\n                </Table>\n            </Card>\n        )\n\n    }\n}\nexport default ManageNews;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <Form>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('roleName', {\r\n              initialValue: '',\r\n              rules: [\r\n                {required: true, message: '角色名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入角色名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tree\r\n} from 'antd'\r\nimport menuList from '../../config/menuConfig'\r\n\r\nconst Item = Form.Item\r\n\r\nconst { TreeNode } = Tree;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nexport default class AuthForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    role: PropTypes.object\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    // 根据传入角色的menus生成初始状态\r\n    const {menus} = this.props.role\r\n    this.state = {\r\n      checkedKeys: menus\r\n    }\r\n  }\r\n\r\n  /*\r\n  为父组件提交获取最新menus数据的方法\r\n   */\r\n  getMenus = () => this.state.checkedKeys\r\n\r\n\r\n  getTreeNodes = (menuList) => {\r\n    return menuList.reduce((pre, item) => {\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      )\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  // 选中某个node时的回调\r\n  onCheck = checkedKeys => {\r\n    console.log('onCheck', checkedKeys);\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n\r\n  componentWillMount () {\r\n    this.treeNodes = this.getTreeNodes(menuList)\r\n  }\r\n\r\n  // 根据新传入的role来更新checkedKeys状态\r\n  /*\r\n  当组件接收到新的属性时自动调用\r\n   */\r\n  componentWillReceiveProps (nextProps) {\r\n    console.log('componentWillReceiveProps()', nextProps)\r\n    const menus = nextProps.role.menus\r\n    this.setState({\r\n      checkedKeys: menus\r\n    })\r\n    // this.state.checkedKeys = menus\r\n  }\r\n\r\n  render() {\r\n    console.log('AuthForm render()')\r\n    const {role} = this.props\r\n    const {checkedKeys} = this.state\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          <Input value={role.name} disabled/>\r\n        </Item>\r\n\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll={true}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={this.onCheck}\r\n        >\r\n          <TreeNode title=\"平台权限\" key=\"all\">\r\n            {this.treeNodes}\r\n          </TreeNode>\r\n        </Tree>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Card, Button, Table, Modal, message } from 'antd'\r\nimport { PAGE_SIZE } from \"../../utils/constants\"\r\nimport { reqRoles, reqAddRole, reqUpdateRole } from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport memoryUtils from \"../../utils/memoryUtils\"\r\nimport { formateDate } from '../../utils/dateUtils'\r\nimport storageUtils from \"../../utils/storageUtils\";\r\n\r\n/*\r\n角色路由\r\n */\r\nexport default class Role extends Component {\r\n\r\n  state = {\r\n    roles: [], // 所有角色的列表\r\n    role: {}, // 选中的role\r\n    isShowAdd: false, // 是否显示添加界面\r\n    isShowAuth: false, // 是否显示设置权限界面\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.auth = React.createRef()\r\n  }\r\n\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render: (create_time) => formateDate(create_time)\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name'\r\n      },\r\n    ]\r\n  }\r\n\r\n  getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if (result.status === 0) {\r\n      const roles = result.data\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: event => { // 点击行\r\n        console.log('row onClick()', role)\r\n        // alert('点击行')\r\n        this.setState({\r\n          role\r\n        })\r\n      },\r\n    }\r\n  }\r\n\r\n  /*\r\n  添加角色\r\n   */\r\n  addRole = () => {\r\n    // 进行表单验证, 只能通过了才向下处理\r\n    this.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n\r\n        // 隐藏确认框\r\n        this.setState({\r\n          isShowAdd: false\r\n        })\r\n\r\n        // 收集输入数据\r\n        const { roleName } = values\r\n        this.form.resetFields()\r\n\r\n        // 请求添加\r\n        const result = await reqAddRole(roleName)\r\n        // 根据结果提示/更新列表显示\r\n        if (result.status === 0) {\r\n          message.success('添加角色成功')\r\n          // this.getRoles()\r\n          // 新产生的角色\r\n          const role = result.data\r\n          // 更新roles状态\r\n          /*const roles = this.state.roles\r\n          roles.push(role)\r\n          this.setState({\r\n            roles\r\n          })*/\r\n\r\n          // 更新roles状态: 基于原本状态数据更新\r\n          this.setState(state => ({\r\n            roles: [...state.roles, role]\r\n          }))\r\n\r\n        } else {\r\n          message.success('添加角色失败')\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  /*\r\n  更新角色\r\n   */\r\n  updateRole = async () => {\r\n\r\n    // 隐藏确认框\r\n    this.setState({\r\n      isShowAuth: false\r\n    })\r\n\r\n    const role = this.state.role\r\n    // 得到最新的menus\r\n    const menus = this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_time = Date.now()\r\n    role.auth_name = memoryUtils.user.username\r\n\r\n    // 请求更新\r\n    const result = await reqUpdateRole(role)\r\n    if (result.status === 0) {\r\n      // this.getRoles()\r\n      // 如果当前更新的是自己角色的权限, 强制退出\r\n      if (role._id === memoryUtils.user.role_id) {\r\n        memoryUtils.user = {}\r\n        storageUtils.removeUser()\r\n        this.props.history.replace('/login')\r\n        message.success('当前用户角色权限成功')\r\n      } else {\r\n        message.success('设置角色权限成功')\r\n        this.setState({\r\n          roles: [...this.state.roles]\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initColumn()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRoles()\r\n  }\r\n\r\n  render() {\r\n\r\n    const { roles, role, isShowAdd, isShowAuth } = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <Button type='primary' onClick={() => this.setState({ isShowAdd: true })}>创建角色</Button> &nbsp;&nbsp;\r\n        <Button type='primary' disabled={!role._id} onClick={() => this.setState({ isShowAuth: true })}>设置角色权限</Button>\r\n      </span>\r\n    )\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{ defaultPageSize: PAGE_SIZE }}\r\n          rowSelection={{\r\n            type: 'radio',\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => { // 选择某个radio时回调\r\n              this.setState({\r\n                role\r\n              })\r\n            }\r\n\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({ isShowAdd: false })\r\n            this.form.resetFields()\r\n          }}\r\n        >\r\n          <AddForm\r\n            setForm={(form) => this.form = form}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => {\r\n            this.setState({ isShowAuth: false })\r\n          }}\r\n        >\r\n          <AuthForm ref={this.auth} role={role} />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n添加/修改用户的form组件\r\n */\r\nclass UserForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    roles: PropTypes.array.isRequired,\r\n    user: PropTypes.object\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {roles, user} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label='用户名'>\r\n          {\r\n            getFieldDecorator('username', {\r\n              initialValue: user.username,\r\n            })(\r\n              <Input placeholder='请输入用户名'/>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n        {\r\n          user._id ? null : (\r\n            <Item label='密码'>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  initialValue: user.password,\r\n                })(\r\n                  <Input type='password' placeholder='请输入密码'/>\r\n                )\r\n              }\r\n            </Item>\r\n          )\r\n        }\r\n\r\n        <Item label='角色'>\r\n          {\r\n            getFieldDecorator('role_id', {\r\n              initialValue: user.role_id,\r\n            })(\r\n              <Select>\r\n                {\r\n                  roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UserForm)","import React, { Component } from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport { formateDate } from \"../../utils/dateUtils\"\r\nimport LinkButton from \"../../components/link-button/index\"\r\nimport { reqDeleteUser, reqUsers, reqAddOrUpdateUser } from \"../../api/index\";\r\nimport UserForm from './user-form'\r\n\r\n/*\r\n用户路由\r\n */\r\nexport default class User extends Component {\r\n\r\n  state = {\r\n    users: [], // 所有用户列表\r\n    roles: [], // 所有角色列表\r\n    isShow: false, // 是否显示确认框\r\n  }\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username'\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'create_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '所属角色',\r\n        dataIndex: 'role_id',\r\n        render: (role_id) => this.roleNames[role_id]\r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\r\n          </span>\r\n        )\r\n      },\r\n    ]\r\n  }\r\n\r\n  /*\r\n  根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n   */\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name\r\n      return pre\r\n    }, {})\r\n    // 保存\r\n    this.roleNames = roleNames\r\n  }\r\n\r\n  /*\r\n  显示添加界面\r\n   */\r\n  showAdd = () => {\r\n    this.user = null // 去除前面保存的user\r\n    this.setState({ isShow: true })\r\n  }\r\n\r\n  /*\r\n  显示修改界面\r\n   */\r\n  showUpdate = (user) => {\r\n    this.user = user // 保存user\r\n    this.setState({\r\n      isShow: true\r\n    })\r\n  }\r\n\r\n  /*\r\n  删除指定用户\r\n   */\r\n  deleteUser = (user) => {\r\n    Modal.confirm({\r\n      title: `确认删除${user.username}吗?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user._id)\r\n        if (result.status === 0) {\r\n          message.success('删除用户成功!')\r\n          this.getUsers()\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  添加/更新用户\r\n   */\r\n  addOrUpdateUser = async () => {\r\n\r\n    this.setState({ isShow: false })\r\n\r\n    // 1. 收集输入数据\r\n    const user = this.form.getFieldsValue()\r\n    this.form.resetFields()\r\n    // 如果是更新, 需要给user指定_id属性\r\n    if (this.user) {\r\n      user._id = this.user._id\r\n    }\r\n\r\n    // 2. 提交添加的请求\r\n    const result = await reqAddOrUpdateUser(user)\r\n    // 3. 更新列表显示\r\n    if (result.status === 0) {\r\n      message.success(`${this.user ? '修改' : '添加'}用户成功`)\r\n      this.getUsers()\r\n    }\r\n  }\r\n\r\n  getUsers = async () => {\r\n    const result = await reqUsers()\r\n    if (result.status === 0) {\r\n      const { users, roles } = result.data\r\n      this.initRoleNames(roles)\r\n      this.setState({\r\n        users,\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUsers()\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const { users, roles, isShow } = this.state\r\n    const user = this.user || {}\r\n\r\n    const title = <Button type='primary' onClick={this.showAdd}>创建用户</Button>\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          pagination={{ defaultPageSize: 10 }}\r\n        />\r\n\r\n        <Modal\r\n          title={user._id ? '修改用户' : '添加用户'}\r\n          visible={isShow}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() => {\r\n            this.form.resetFields()\r\n            this.setState({ isShow: false })\r\n          }}\r\n        >\r\n          <UserForm\r\n            setForm={form => this.form = form}\r\n            roles={roles}\r\n            user={user}\r\n          />\r\n        </Modal>\r\n\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './not-found.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","import React from 'react';\nimport { Upload, Icon, Modal,message } from 'antd';\nimport { reqDeleteImg } from '../../api'\n\n\nclass PicWall extends React.Component {\n    state = {\n        previewVisible: false,//标识是否显示大图预览\n        previewImage: '',//大图的URL地址\n        fileList: [],\n    };\n    /*\n  获取所有已上传图片文件名的数组\n   */\n    getImgs = () => {\n        return this.state.fileList.map(file => file.name)\n    };\n//隐藏model\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    handlePreview =  file => {  \n    //显示指定file对应的大图\n        this.setState({\n            previewImage: file.url || file.preview,\n            previewVisible: true,\n        });\n    };\n//filelist是所有已上传图片的数组,file是当前操作的图片文件\n    handleChange = async({ file,fileList }) => {\n        console.log('handlechange',file.status,fileList)\n        // 一旦上传成功, 将当前上传的file的信息修正(name, url)\n        if (file.status === 'done') {\n            const result = file.response  // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\n            console.log(result)\n            if (result.status === 0) {\n                message.success('上传图片成功!')\n                const { name, url } = result.data\n                file = fileList[fileList.length - 1]\n                file.name = name\n                file.url = url\n            } else {\n                message.error('上传图片失败')\n            }\n        } else if (file.status === 'removed') { // 删除图片\n            const result = await reqDeleteImg(file.name)\n            if (result.status === 0) {\n                message.success('删除图片成功!')\n            } else {\n                message.error('删除图片失败!')\n            }\n        }\n//在操作（上传/删除）过程中更新filelist状态\n        this.setState({ fileList })\n    };\n    render() {\n        const { previewVisible, previewImage, fileList } = this.state;\n        const uploadButton = (\n            <div>\n                <Icon type=\"plus\" />\n                <div className=\"ant-upload-text\">上传</div>\n            </div>\n        );\n        return (\n            <div>\n                <Upload\n                    action=\"/imageFile/banneruploads\" /*上传图片的接口地址*/\n                    accept='image/*'  /*只接收图片格式*/\n                    name='banner-img' /*请求参数名（后台指定）*/\n                    listType=\"picture-card\"\n                    fileList={fileList}  /*所有已上传图片文件对象的数组*/\n                    onPreview={this.handlePreview}\n                    onChange={this.handleChange}\n                >\n                    {fileList.length >= 1 ? null : uploadButton}\n                </Upload>\n                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default PicWall","import React, { Component } from 'react';\nimport './index.css';\nimport { Card, Form, Input, Button, message } from 'antd';\n// import {  Carousel } from 'antd';\nimport PicWall from './PicWall';\nimport {reqAddBannerpic} from '../../api'\nconst { Item } = Form\n\nclass BannerManage extends Component {\n    constructor(props) {\n        super(props)\n        // 创建用来保存ref标识的标签对象的容器\n        this.pw = React.createRef()\n    }\n\n    submit = () => {\n        // 进行表单验证, 如果通过了, 才发送请求\n        this.props.form.validateFields(async (error, values) => {\n            if (!error) {\n                //1.收集数据，2调用接口请求函数添加3.根据结果提示\n                // console.log('ok')\n\n                const { url_address } = values\n\n                const url = this.pw.current.getImgs()\n                const bannerpic = {  url, url_address }\n                // console.log(bannerpic)\n                const result = await reqAddBannerpic(bannerpic)\n                console.log(result)\n                if (result.err === 0) {\n                    message.success('新闻添加成功')\n                    //新闻发送成功后，跳转到新闻预览页面 \n\n                    this.props.history.push('/success', { bannerpic })\n                }\n                else {\n                    message.error('新闻添加错误')\n                }\n            }\n        })\n\n    }\n    // state = {\n    //     urls:[],\n    // }\n    // getUrl = async ()=>{\n    //     const result = await reqGetBannerImg()\n    //     if (result.status === 0) {\n    //         const urls = result.list\n    //         this.setState({\n    //             urls\n    //         })\n    //     }\n    // }\n    // componentDidMount(){\n    //     this.getUrl()\n    // }\n//图片已经跟后台做好连接，现在最多显示5个图片\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 2 },//左侧的宽度\n                sm: { span: 2 },\n            },\n            wrapperCol: {\n                xs: { span: 20 },//右侧的宽度\n                sm: { span: 20 },\n            },\n        };\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Card>\n                <Form {...formItemLayout}>\n                    <Item label='链接地址'>\n                        {\n                            getFieldDecorator('url_address', {\n                                initialValue: '',\n                                rules: [\n                                    { required: true, message: '必须输入链接地址' },\n                                    { max: 300, message: '输入标题过长' }//设置标题名过长错误提示的规则\n                                ]\n                            })(<Input placeholder='请输入地址' />)\n                        }\n                    </Item>\n                  \n                    <Item label='文章封面图'>\n                        <PicWall ref={this.pw} />\n                    </Item>\n                    <Item>\n                        <Button style={{ marginLeft: '10%' }}\n                            type='primary'\n                            block onClick={this.submit}>提交</Button>\n                    </Item>\n                </Form>\n            </Card>\n        )\n    }\n}\nexport default Form.create()(BannerManage)","import React, { Component } from 'react'\nimport { Card, Icon, List } from 'antd'\nimport './index.css'\nimport LinkButton from '../../components/link-button';\nimport { BASE_IMG_URL } from '../../utils/constants';\nconst Item = List.Item\n\nclass ArticleDetail extends Component {\n    render() {\n        //读取携带过来的states数据\n        const { title, author, department, thumbnail, content, time } = this.props.location.state.article\n        console.log('thumbnail', thumbnail)\n\n        const titleHead = (\n            <span>\n                <LinkButton>\n                    <Icon\n                        type='arrow-left'\n                        style={{ marginRight: 15, fontSize: 30 }}\n                        onClick={() => this.props.history.goBack()}\n                    />\n                </LinkButton>\n                <span>文章详情</span>\n            </span>\n        )\n        return (\n            <Card title={titleHead} >\n                <Item className='article-detail'>\n                    <span className='left'>文章名称：</span>\n                    <span>{title}</span>\n                </Item>\n                <Item>\n                    <span className='left'>单位：</span>\n                    <span>{department}</span>\n                </Item>\n                <Item>\n                    <span className='left'>作者：</span>\n                    <span>{author}</span>\n                </Item>\n                {\n                    thumbnail.length === 0 ?\n                        '' :\n                        <Item >\n                            <span className='left'>封面图：</span>\n                            <span>\n                                <img\n                                    className='detail-pic'\n                                    src={BASE_IMG_URL + thumbnail}\n                                    alt='img'\n                                />\n                            </span>\n                        </Item>\n                }\n                <Item>\n                    <span className='left'>发布时间：</span>\n                    <span>{time}</span>\n                </Item>\n                <Item>\n                    <span className='left'>详情：</span>\n                    <span className='detail' dangerouslySetInnerHTML={{ __html: content }}>\n                    </span>\n                </Item>\n            </Card>\n        )\n    }\n}\n\nexport default ArticleDetail","import React, { Component } from 'react';\nimport { Table, Divider, message, Modal, Select, Button, Input, Card } from 'antd';\n\nimport { PAGE_SIZE } from '../../utils/constants';\nimport LinkButton from '../../components/link-button';\nimport { reqNotices, reqDeleteNotice, reqSearchNotices } from '../../api'\nconst { Column } = Table;\nconst Option = Select.Option\n\n\n\nclass ManageNotice extends Component {\n    state = {\n        total: 0, // 商品的总数量\n        notices: [], // 文章的数组\n        loading: false,//是否正在加载中\n        searchName: '', // 搜索的关键字\n        searchType: 'noticeTitle', // 根据哪个字段搜索\n    }\n    //获取指定页码的列表数据表示\n    getNotices = async (pageNum) => {\n        //发送请求之前，将loading效果设置为true\n        this.setState({ loading: true })\n        const { searchName, searchType } = this.state\n        let result\n        if (searchName) {\n            result = await reqSearchNotices({ pageNum, pageSize: PAGE_SIZE, searchName, searchType })\n        } else { // 一般分页请求\n            result = await reqNotices(pageNum, PAGE_SIZE)\n        }\n        // const result = await reqCheckedArticles(pageNum, PAGE_SIZE,searchName,searchType)\n        //请求结束之后将loading效果设置为false\n        this.setState({ loading: false })\n        if (result.status === 0) {\n            const { total, list } = result.data\n            console.log(list)\n            this.setState({\n                total,\n                notices: list\n            })\n        }\n    }\n    /*\n删除指定新闻\n*/\n    deleteArticle = (notice) => {\n        Modal.confirm({\n            title: `确认删除****[${notice.title}]****吗?`,\n            onOk: async () => {\n                const result = await reqDeleteNotice(notice.title)\n                if (result.err === 0) {\n                    message.success('删除通知成功!')\n                    this.getNotices(1)\n                }else if (result.err === -999) {\n                    message.error('不要调皮，你没有该权限')\n                } else if (result.err === -888) {\n                    message.error('登陆过期,请重新登陆')\n                } else {\n                    message.error('出现其他错误')\n                }\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.getNotices(1)\n    }\n    render() {\n        const { notices, total, loading, searchName, searchType } = this.state\n\n        const head = (\n            <span>\n                <Select\n                    value={searchType}\n                    style={{ width: 150 }}\n                    onChange={value => this.setState({ searchType: value })}\n                >\n                    <Option value='noticeTitle'>按通知名搜索</Option>\n                    {/* <Option value='articleCategory'>按文章分类搜索</Option> */}\n                    <Option value='noticeAuthor'>按通知作者搜索</Option>\n                    <Option value='noticeContent'>按通知内容搜索</Option>\n                    <Option value='noticeDepartment'>按通知发布单位搜索</Option>\n\n                </Select>\n                <Input\n                    placeholder='关键字'\n                    style={{ width: 150, margin: '0 15px' }}\n                    value={searchName}\n                    onChange={event => this.setState({ searchName: event.target.value })}\n                />\n                <Button type='primary' onClick={() => this.getNotices(1)}>搜索</Button>\n            </span>\n        )\n        return (\n            <Card title={head}>\n                <Table\n\n                    rowKey='_id'\n                    loading={loading}\n                    //分页的配置对象\n                    pagination={{\n                        total,\n                        defaultPageSize: PAGE_SIZE,\n                        showQuickJumper: true,\n                        onChange: this.getNotices,\n\n                    }}\n                    dataSource={notices}>\n                    <Column title=\"通知名\" dataIndex=\"title\" />\n                    <Column title=\"作者\" dataIndex=\"author\" />\n                    <Column title=\"单位\" dataIndex=\"department\" />\n                    <Column title=\"发表时间\" dataIndex='time' />\n                    <Column\n                        title=\"处理\"\n                        key=\"action\"\n                        render={(notice) => (\n                            <span>\n                                <LinkButton onClick={() => this.props.history.push('/notice/detail', { notice })}>详情</LinkButton>\n                                <Divider type=\"vertical\" />\n                                <LinkButton onClick={() => this.props.history.push('/noticesManage/add' , notice)}>修改</LinkButton>\n                                <Divider type='vertical'/>\n                                <LinkButton onClick={() => this.deleteArticle(notice)}>删除</LinkButton>\n                            </span>\n                        )}\n                    />\n                </Table>\n            </Card>\n        )\n\n    }\n}\nexport default ManageNotice;","import React, { Component } from 'react';\nimport { Card, Form, Input, Button, message, Select } from 'antd';\n// import RichTextEditor from '../newsmanage/RichTextEditor'\nimport { BASE_ZZ_DEPARTMENT } from '../../utils/constants'\nimport { reqAddOrUpdateNotice } from '../../api/index';\nimport EditorDemo from '../newsmanage/RichText';\nconst { Item } = Form\nconst { Option } = Select;\n\n\nclass WriteNotice extends Component {\n    constructor(props) {\n        super(props)\n        // 创建用来保存ref标识的标签对象的容器\n        this.editor = React.createRef()\n    }\n    submit = () => {\n        // 进行表单验证, 如果通过了, 才发送请求\n        this.props.form.validateFields(async (error, values) => {\n            if (!error) {\n                //1.收集数据，2调用接口请求函数添加3.根据结果提示\n                const { title, author, department, category } = values\n                const content = this.editor.current.getDetail()\n                const notice = { title, author, department, category, content }\n                console.log(notice)\n                // 2.如果是更新, 需要添加_id\n                if (this.isUpdate) { notice._id = this.notice._id }\n                // 3. 调用接口请求函数去添加/更新\n                const result = await reqAddOrUpdateNotice(notice)\n                // 3. 根据结果提示\n                if (result.err === 0) {\n                    message.success(`${this.isUpdate ? '更新' : '添加'}文章成功!`)\n                    this.props.history.goBack()\n                } else if (result.err === -999) {\n                    message.error('没有该权限，不要调皮')\n                } else if (result.err === -888) {\n                    message.error('登陆过期,请重新登陆')\n                }\n                else {\n                    message.error(`${this.isUpdate ? '更新' : '添加'}文章失败!`)\n                }\n            }\n        })\n\n    }\n    componentWillMount() {\n        // 取出携带的state\n        const notice = this.props.location.state  // 如果是添加没值, 否则有值\n        // 保存是否是更新的标识\n        console.log(notice)\n        this.isUpdate = !!notice\n        // 保存商品(如果没有, 保存是{})\n        this.notice = notice || {}\n    }\n    render() {\n        const formItemLayout = {\n            labelCol: { xs: { span: 2 }, sm: { span: 2 }, },\n            wrapperCol: { xs: { span: 20 }, sm: { span: 20 }, },\n        };\n\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Card>\n                <Form {...formItemLayout}>\n                    <Item label=\"分类\">\n                        {getFieldDecorator('category', {\n                            initialValue: this.notice.category,\n                            rules: [{ required: true, message: '必须选择文章分类!' }],\n                        })(\n                            <Select\n                                placeholder=\"请选择分类\"\n                                onChange={this.handleSelectChange}\n                            >\n                                <Option value=\"通知\">通知</Option>\n                            </Select>,\n                        )}\n                    </Item>\n                    <Item label='通知名'>\n                        {\n                            getFieldDecorator('title', {\n                                initialValue: this.notice.title,\n                                rules: [\n                                    { required: true, message: '必须输入title' },\n                                    { max: 70, message: '输入标题过长' }//设置标题名过长错误提示的规则\n                                ]\n                            })(<Input placeholder='请输入title' />)\n                        }\n                    </Item>\n                    <Item label='作者'>\n                        {\n                            getFieldDecorator('author', {\n                                initialValue: this.notice.author,\n                                rules: [\n                                    { required: true, message: '必须输入作者' },\n                                ]\n                            })(<Input placeholder='请输入作者' />)\n                        }\n\n                    </Item>\n                    <Item label='单位'>\n                        {\n                            getFieldDecorator('department', {\n                                initialValue: this.notice.department,\n                                rules: [\n                                    { required: true, message: '必须输入作者单位' },\n                                    { type: \"enum\", enum: BASE_ZZ_DEPARTMENT }//设置了单位枚举类型\n\n                                ]\n                            })(<Input placeholder='请输入单位' />)\n                        }\n\n                    </Item>\n\n                    <Item label=\"详情\" labelCol={{ span: 2 }} wrapperCol={{ span: 20 }}>\n                        {/* <RichTextEditor ref={this.editor} detail = {this.notice.content}/> */}\n                        <EditorDemo ref={this.editor} detail={this.notice.content} />\n                    </Item>\n\n                    <Item>\n                        <Button style={{ marginLeft: '10%' }}\n                            type='primary'\n                            block onClick={this.submit}>提交</Button>\n                    </Item>\n                </Form>\n            </Card>\n        )\n    }\n}\nexport default Form.create()(WriteNotice)","import React, { Component } from 'react'\nimport {Card,Icon,List} from 'antd'\nimport LinkButton from '../../components/link-button';\nimport './index.css'\nconst Item = List.Item\n\nclass NoticeDetail extends Component {\n    render() {\n        //读取携带过来的states数据\n        const { title, author, department,  content} = this.props.location.state.notice\n\n        const titleHead = (\n            <span>\n                <LinkButton>\n                    <Icon\n                        type='arrow-left'\n                        style={{ marginRight: 15, fontSize: 30 }}\n                        onClick={() => this.props.history.goBack()}\n                    />\n                </LinkButton>\n                <span>通知详情</span>\n            </span>\n        )\n        return (\n            <Card title={titleHead} >\n                <Item className='article-detail'>\n                    <span className='left'>名称：</span>\n                    <span>{title}</span>\n                </Item>\n                <Item>\n                    <span className='left'>单位：</span>\n                    <span>{department}</span>\n                </Item>\n                <Item>\n                    <span className='left'>作者：</span>\n                    <span>{author}</span>\n                </Item>\n                <Item>\n                    <span className='left'>详情：</span>\n                    <span className='detail' dangerouslySetInnerHTML={{ __html: content }}>\n                    </span>\n                </Item>\n            </Card>\n        )\n    }\n}\n\nexport default NoticeDetail","import React, { Component } from 'react';\nimport { Card, Form, Input, Button, message, Select } from 'antd';\n// import RichTextEditor from '../newsmanage/RichTextEditor'\nimport { BASE_ALL_DEPARTMENT } from '../../utils/constants'\nimport { reqAddOrUpdateBookFile } from '../../api/index';\nimport EditorDemo from '../newsmanage/RichText';\nconst { Item } = Form\nconst { Option } = Select;\n\nclass WriteBookFile extends Component {\n    constructor(props) {\n        super(props)\n        // 创建用来保存ref标识的标签对象的容器\n        this.editor = React.createRef()\n    }\n    submit = () => {\n        // 进行表单验证, 如果通过了, 才发送请求\n        this.props.form.validateFields(async (error, values) => {\n            if (!error) {\n                //1.收集数据，2调用接口请求函数添加3.根据结果提示\n                // console.log('ok')\n                const { title, author, department, category } = values\n                const content = this.editor.current.getDetail()\n                const bookfile = { title, author, department, category, content }\n                // 如果是更新, 需要添加_id\n                if (this.isUpdate) {\n                    bookfile._id = this.bookfile._id\n                }\n\n                // 2. 调用接口请求函数去添加/更新\n                const result = await reqAddOrUpdateBookFile(bookfile)\n\n                // 3. 根据结果提示\n                if (result.err === 0) {\n                    message.success(`${this.isUpdate ? '更新' : '添加'}文章成功!`)\n                    this.props.history.goBack()\n                } else {\n                    message.error(`${this.isUpdate ? '更新' : '添加'}文章失败!`)\n                }\n                // console.log(bookfile)\n                // const result = await reqAddBookFiles(bookfile)\n                // console.log(result)\n                // if (result.err === 0) {\n                //     message.success('教案添加成功')\n                //     this.props.history.push('/bookfile/detail', { bookfile })\n                // }\n                // else {\n                //     message.error('教案添加错误')\n                // }\n            }\n        })\n\n    }\n    componentWillMount() {\n        // 取出携带的state\n        const bookfile = this.props.location.state  // 如果是添加没值, 否则有值\n        // 保存是否是更新的标识\n        this.isUpdate = !!bookfile\n        // 保存商品(如果没有, 保存是{})\n        this.bookfile = bookfile || {}\n    }\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 2 },//左侧的宽度\n                sm: { span: 2 },\n            },\n            wrapperCol: {\n                xs: { span: 20 },//右侧的宽度\n                sm: { span: 20 },\n            },\n        };\n\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Card>\n                <Form {...formItemLayout}>\n                    <Item label=\"分类\">\n                        {getFieldDecorator('category', {\n                            initialValue:this.bookfile.category,\n                            rules: [{ required: true, message: '必须选择文章分类!' }],\n                        })(\n                            <Select\n                                placeholder=\"请选择分类\"\n                                onChange={this.handleSelectChange}\n                            >\n                                <Option value=\"政工教案\">政工教案</Option>\n                            </Select>,\n                        )}\n                    </Item>\n                    <Item label='教案名'>\n                        {\n                            getFieldDecorator('title', {\n                                initialValue: this.bookfile.title,\n                                rules: [\n                                    { required: true, message: '必须输入title' },\n                                    { max: 27, message: '输入标题过长' }//设置标题名过长错误提示的规则\n                                ]\n                            })(<Input placeholder='请输入title' />)\n                        }\n                    </Item>\n                    <Item label='作者'>\n                        {\n                            getFieldDecorator('author', {\n                                initialValue: this.bookfile.author,\n                                rules: [\n                                    { required: true, message: '必须输入作者' },\n                                ]\n                            })(<Input placeholder='请输入作者' />)\n                        }\n\n                    </Item>\n                    <Item label='单位'>\n                        {\n                            getFieldDecorator('department', {\n                                initialValue: this.bookfile.department,\n                                rules: [\n                                    { required: true, message: '必须输入作者单位' },\n                                    { type: \"enum\", enum: BASE_ALL_DEPARTMENT }//设置了单位枚举类型\n\n                                ]\n                            })(<Input placeholder='请输入单位' />)\n                        }\n\n                    </Item>\n\n                    <Item label=\"详情\" labelCol={{ span: 2 }} wrapperCol={{ span: 20 }}>\n                        {/* <RichTextEditor /> */}\n                        <EditorDemo ref={this.editor} detail={this.bookfile.content}/>\n                    </Item>\n\n                    <Item>\n                        <Button style={{ marginLeft: '10%' }}\n                            type='primary'\n                            block onClick={this.submit}>提交</Button>\n                    </Item>\n                </Form>\n            </Card>\n        )\n    }\n}\nexport default Form.create()(WriteBookFile)","import React, { Component } from 'react';\nimport { Table, Divider, message, Modal, Select, Button, Input, Card } from 'antd';\nimport { PAGE_SIZE } from '../../utils/constants';\n// import { formateDate} from '../../utils/dateUtils'\nimport LinkButton from '../../components/link-button';\nimport { reqBookFiles, reqDeleteBookFile, reqSearchBookFiles } from '../../api'\nconst { Column } = Table;\nconst Option = Select.Option\n\nclass BookFileManage extends Component {\n    state = {\n        total: 0, // 商品的总数量\n        bookfiles: [], // 文章的数组\n        loading: false,//是否正在加载中\n        searchName: '', // 搜索的关键字\n        searchType: 'noticeTitle', // 根据哪个字段搜索\n    }\n    //获取指定页码的列表数据表示\n    getBookFiles = async (pageNum) => {\n        //发送请求之前，将loading效果设置为true\n        this.setState({ loading: true })\n        const { searchName, searchType } = this.state\n        let result\n        if (searchName) {\n            result = await reqSearchBookFiles({ pageNum, pageSize: PAGE_SIZE, searchName, searchType })\n        } else { // 一般分页请求\n            result = await reqBookFiles(pageNum, PAGE_SIZE)\n        }\n        this.setState({ loading: false })\n        if (result.status === 0) {\n            const { total, list } = result.data\n            console.log(list)\n            this.setState({\n                total,\n                bookfiles: list\n            })\n        }\n    }\n    /*\n删除指定新闻\n*/\n    deleteBookFile = (bookfile) => {\n        Modal.confirm({\n            title: `确认删除****[${bookfile.title}]****吗?`,\n            onOk: async () => {\n                const result = await reqDeleteBookFile(bookfile.title)\n                if (result.err === 0) {\n                    message.success('删除通知成功!')\n                    this.getBookFiles(1)\n                }\n            }\n        })\n    }\n    componentDidMount() {\n        this.getBookFiles(1)\n    }\n    render() {\n        const { bookfiles, total, loading, searchName, searchType } = this.state\n\n        const head = (\n            <span>\n                <Select\n                    value={searchType}\n                    style={{ width: 150 }}\n                    onChange={value => this.setState({ searchType: value })}\n                >\n                    <Option value='noticeTitle'>按教案名搜索</Option>\n                    {/* <Option value='articleCategory'>按文章分类搜索</Option> */}\n                    <Option value='noticeAuthor'>按作者搜索</Option>\n                    <Option value='noticeContent'>按内容搜索</Option>\n                    <Option value='noticeDepartment'>按发布单位搜索</Option>\n\n                </Select>\n                <Input\n                    placeholder='关键字'\n                    style={{ width: 150, margin: '0 15px' }}\n                    value={searchName}\n                    onChange={event => this.setState({ searchName: event.target.value })}\n                />\n                <Button type='primary' onClick={() => this.getBookFiles(1)}>搜索</Button>\n            </span>\n        )\n        return (\n            <Card title={head}>\n                <Table\n\n                    rowKey='_id'\n                    loading={loading}\n                    //分页的配置对象\n                    pagination={{\n                        total,\n                        defaultPageSize: PAGE_SIZE,\n                        showQuickJumper: true,\n                        onChange: this.getBookFiles,\n                    }}\n                    dataSource={bookfiles}>\n                    <Column title=\"通知名\" dataIndex=\"title\" />\n                    <Column title=\"作者\" dataIndex=\"author\" />\n                    <Column title=\"单位\" dataIndex=\"department\" />\n                    <Column title=\"发表时间\" dataIndex='time' />\n                    <Column\n                        title=\"处理\"\n                        key=\"action\"\n                        render={(bookfile) => (\n                            <span>\n                                <LinkButton onClick={() => this.props.history.push('/bookfile/detail', { bookfile })}>详情</LinkButton>\n                                <Divider type=\"vertical\" />\n                                <LinkButton onClick={() => this.props.history.push('/bookfile/write', bookfile)}>修改</LinkButton>\n                                <Divider type='vertical' />\n                                <LinkButton onClick={() => this.deleteBookFile(bookfile)}>删除</LinkButton>\n                            </span>\n                        )}\n                    />\n                </Table>\n            </Card>\n        )\n\n    }\n}\nexport default BookFileManage;","import React, { Component } from 'react'\nimport {Card,Icon,List} from 'antd'\nimport LinkButton from '../../components/link-button';\nconst Item = List.Item\n\nclass BookFileDetail extends Component {\n    \n    render() {\n        const  { title, author, department, content } = this.props.location.state.bookfile\n        const titleHead = (\n            <span>\n                <LinkButton>\n                    <Icon\n                        type='arrow-left'\n                        style={{ marginRight: 15, fontSize: 30 }}\n                        onClick={() => this.props.history.goBack()}\n                    />\n                </LinkButton>\n                <span>通知详情</span>\n            </span>\n        )\n        return (\n            <Card title={titleHead} >\n                <Item className='article-detail'>\n                    <span className='left'>名称：</span>\n                    <span>{title}</span>\n                </Item>\n                <Item>\n                    <span className='left'>单位：</span>\n                    <span>{department}</span>\n                </Item>\n                <Item>\n                    <span className='left'>作者：</span>\n                    <span>{author}</span>\n                </Item>\n                <Item>\n                    <span className='left'>详情：</span>\n                    <span className='detail' dangerouslySetInnerHTML={{ __html: content }}>\n                    </span>\n                </Item>\n            </Card>\n        )\n    }\n}\nexport default BookFileDetail;","import React, { Component } from 'react';\nimport { Card, Form, Input, Button, message } from 'antd';\nimport { BASE_ZZ_DEPARTMENT } from '../../utils/constants' //引入强军动态的单位\nimport { reqAddOrUpdateDepartmentMessage } from '../../api/index';\nimport EditorDemo from '../newsmanage/RichText';\nconst { Item } = Form\n//这是一个科室动态的发布页面\n\nclass WriteMessage extends Component {\n    constructor(props) {\n        super(props)\n        // 创建用来保存ref标识的标签对象的容器\n        this.editor = React.createRef()\n    }\n    submit = () => {\n        // 进行表单验证, 如果通过了, 才发送请求\n        this.props.form.validateFields(async (error, values) => {\n            if (!error) {\n                //1.收集数据，2调用接口请求函数添加3.根据结果提示\n                // console.log('ok')\n                const { title, author, department } = values\n                const content = this.editor.current.getDetail()\n                const Dmessage = { title, author, department, content }\n                // 2.如果是更新, 需要添加_id\n                if (this.isUpdate) {\n                    Dmessage._id = this.Dmessage._id\n                }\n\n                // 2. 调用接口请求函数去添加/更新\n                const result = await reqAddOrUpdateDepartmentMessage(Dmessage)\n\n                // 3. 根据结果提示\n                if (result.err === 0) {\n                    message.success(`${this.isUpdate ? '更新' : '添加'}文章成功!`)\n                    this.props.history.push('/success')\n                } else if (result.err === -999) {\n                    message.error('没有该权限，不要调皮')\n                } else if (result.err === -888) {\n                    message.error('登陆过期,请重新登陆')\n                }\n                else {\n                    message.error(`${this.isUpdate ? '更新' : '添加'}文章失败!`)\n                }\n            }\n        })\n\n    }\n    componentWillMount() {\n        // 取出携带的state\n        const Dmessage = this.props.location.state  // 如果是添加没值, 否则有值\n        // 保存是否是更新的标识\n        console.log(Dmessage)\n        this.isUpdate = !!Dmessage\n        // 保存商品(如果没有, 保存是{})\n        this.Dmessage = Dmessage || {}\n    }\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 2 },//左侧的宽度\n                sm: { span: 2 },\n            },\n            wrapperCol: {\n                xs: { span: 20 },//右侧的宽度\n                sm: { span: 20 },\n            },\n        };\n\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Card>\n                <Form {...formItemLayout}>\n                    <Item label='title'>\n                        {\n                            getFieldDecorator('title', {\n                                initialValue: this.Dmessage.title,\n                                rules: [\n                                    { required: true, message: '必须输入title' },\n                                    { max: 50, message: '输入标题过长' }//设置标题名过长错误提示的规则\n                                ]\n                            })(<Input placeholder='请输入title' />)\n                        }\n                    </Item>\n                    <Item label='作者'>\n                        {\n                            getFieldDecorator('author', {\n                                initialValue: this.Dmessage.author,\n                                rules: [\n                                    { required: true, message: '必须输入作者' },\n                                ]\n                            })(<Input placeholder='请输入作者' />)\n                        }\n\n                    </Item>\n                    <Item label='单位'>\n                        {\n                            getFieldDecorator('department', {\n                                initialValue: this.Dmessage.department,\n                                rules: [\n                                    { required: true, message: '必须输入作者单位' },\n                                    { type: \"enum\", enum: BASE_ZZ_DEPARTMENT }//设置了单位枚举类型\n\n                                ]\n                            })(<Input placeholder='请输入单位' />)\n                        }\n\n                    </Item>\n\n                    <Item label=\"详情\" labelCol={{ span: 2 }} wrapperCol={{ span: 20 }}>\n                        {/* <RichTextEditor ref={this.editor} detail = {this.Dmessage.content}/> */}\n                        <EditorDemo ref={this.editor} detail={this.Dmessage.content} />\n                    </Item>\n\n                    <Item>\n                        <Button style={{ marginLeft: '10%' }}\n                            type='primary'\n                            block onClick={this.submit}>提交</Button>\n                    </Item>\n                </Form>\n            </Card>\n        )\n    }\n}\nexport default Form.create()(WriteMessage)","import React, { Component } from 'react';\nimport { Table, Divider, message, Modal, Select, Button, Input, Card } from 'antd';\nimport { PAGE_SIZE } from '../../utils/constants';\nimport LinkButton from '../../components/link-button';\nimport { reqDepartmentMessages, reqDeleteMessages, reqSearchMessages } from '../../api'\nconst { Column } = Table;\nconst Option = Select.Option\n\nclass MessageManage extends Component {\n    state = {\n        total: 0, // 商品的总数量\n        Dmessages: [], // 文章的数组\n        loading: false,//是否正在加载中\n        searchName: '', // 搜索的关键字\n        searchType: 'noticeTitle', // 根据哪个字段搜索\n    }\n    //获取指定页码的列表数据表示\n    getBookFiles = async (pageNum) => {\n        //发送请求之前，将loading效果设置为true\n        this.setState({ loading: true })\n        const { searchName, searchType } = this.state\n        let result\n        if (searchName) {\n            result = await reqSearchMessages({ pageNum, pageSize: PAGE_SIZE, searchName, searchType })\n        } else { // 一般分页请求\n            result = await reqDepartmentMessages(pageNum, PAGE_SIZE)\n        }\n        this.setState({ loading: false })\n        if (result.status === 0) {\n            const { total, list } = result.data\n            console.log(list)\n            this.setState({\n                total,\n                Dmessages: list\n            })\n        }\n    }\n    /*\n删除指定新闻\n*/\n    deleteBookFile = (Dmessage) => {\n        Modal.confirm({\n            title: `确认删除****[${Dmessage.title}]****吗?`,\n            onOk: async () => {\n                const result = await reqDeleteMessages(Dmessage.title)\n                if (result.err === 0) {\n                    message.success('删除通知成功!')\n                    this.getBookFiles(1)\n                } else if (result.err === -888) {\n                    message.error('登陆过期,请重新登陆')\n                }else{\n                    message.error('other error')\n                }\n            }\n        })\n    }\n    componentDidMount() {\n        this.getBookFiles(1)\n    }\n    render() {\n        const { Dmessages, total, loading, searchName, searchType } = this.state\n\n        const head = (\n            <span>\n                <Select\n                    value={searchType}\n                    style={{ width: 150 }}\n                    onChange={value => this.setState({ searchType: value })}\n                >\n                    <Option value='noticeTitle'>按标题名搜索</Option>\n                    <Option value='noticeAuthor'>按作者搜索</Option>\n                    <Option value='noticeContent'>按内容搜索</Option>\n                    <Option value='noticeDepartment'>按发布单位搜索</Option>\n\n                </Select>\n                <Input\n                    placeholder='关键字'\n                    style={{ width: 150, margin: '0 15px' }}\n                    value={searchName}\n                    onChange={event => this.setState({ searchName: event.target.value })}\n                />\n                <Button type='primary' onClick={() => this.getBookFiles(1)}>搜索</Button>\n            </span>\n        )\n        return (\n            <Card title={head}>\n                <Table\n\n                    rowKey='_id'\n                    loading={loading}\n                    //分页的配置对象\n                    pagination={{\n                        total,\n                        defaultPageSize: PAGE_SIZE,\n                        showQuickJumper: true,\n                        onChange: this.getBookFiles,\n\n                    }}\n                    dataSource={Dmessages}>\n                    <Column title=\"title\" dataIndex=\"title\" />\n                    <Column title=\"作者\" dataIndex=\"author\" />\n                    <Column title=\"单位\" dataIndex=\"department\" />\n                    <Column title=\"发布时间\" dataIndex='time' />\n                    <Column\n                        title=\"处理\"\n                        key=\"action\"\n                        render={(Dmessage) => (\n                            <span>\n                                <LinkButton onClick={() => this.props.history.push('/departmentMessage/detail', {Dmessage })}>详情</LinkButton>\n                                <Divider type=\"vertical\" />\n                                <LinkButton onClick={() => this.props.history.push('/departmentMessage/write', Dmessage)}>修改</LinkButton>\n                                <Divider type='vertical' />\n                                <LinkButton onClick={() => this.deleteBookFile(Dmessage)}>删除</LinkButton>\n                            </span>\n                        )}\n                    />\n                </Table>\n            </Card>\n        )\n\n    }\n}\nexport default MessageManage;","import React, { Component } from 'react'\nimport { Card, Icon, List } from 'antd'\nimport LinkButton from '../../components/link-button';\nconst Item = List.Item\n\nclass MessageDetail extends Component {\n\n    render() {\n        const { title, author, department, content } = this.props.location.state.Dmessage\n        const titleHead = (\n            <span>\n                <LinkButton>\n                    <Icon\n                        type='arrow-left'\n                        style={{ marginRight: 15, fontSize: 30 }}\n                        onClick={() => this.props.history.goBack()}\n                    />\n                </LinkButton>\n                <span>强军动态详情</span>\n            </span>\n        )\n        return (\n            <Card title={titleHead} >\n                <Item className='article-detail'>\n                    <span className='left'>名称：</span>\n                    <span>{title}</span>\n                </Item>\n                <Item>\n                    <span className='left'>单位：</span>\n                    <span>{department}</span>\n                </Item>\n                <Item>\n                    <span className='left'>作者：</span>\n                    <span>{author}</span>\n                </Item>\n                <Item>\n                    <span className='left'>详情：</span>\n                    <span className='detail' dangerouslySetInnerHTML={{ __html: content }}>\n                    </span>\n                </Item>\n            </Card>\n        )\n    }\n}\nexport default MessageDetail;","import React from 'react'\nimport { Upload, Icon, Modal, message } from 'antd'\nimport { reqDeleteVideo } from '../../api'\n/*\n用于视频上传的组件\n */\nexport default class VideoWall extends React.Component {\n\n\n    state = {\n        previewVisible: false, // 标识是否显示大图预览Modal\n        previewImage: '', // 大图的url\n        fileList: [],\n    }\n    /*\n      获取所有已上传视频文件名的数组\n       */\n    getUrls = () => {\n        return this.state.fileList.map(file => file.name)\n    };\n\n    /*\n    隐藏Modal\n     */\n    handleCancel = () => this.setState({ previewVisible: false });\n\n    handlePreview = file => {\n        console.log('handlePreview()', file)\n        // 显示指定file对应的大图\n        this.setState({\n            previewImage: file.url || file.thumbUrl,\n            previewVisible: true,\n        });\n    };\n\n    /*\n    file: 当前操作的图片文件(上传/删除)\n    fileList: 所有已上传图片文件对象的数组\n     */\n    handleChange = async ({ file, fileList }) => {\n        console.log('handleChange()', file.status, fileList.length, file === fileList[fileList.length - 1])\n\n        // 一旦上传成功, 将当前上传的file的信息修正(name, url)\n        if (file.status === 'done') {\n            const result = file.response  // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\n            console.log(result)\n            if (result.status === 0) {\n                message.success('上传视频成功!')\n                const { name, url } = result.data\n                file = fileList[fileList.length - 1]\n                file.name = name\n                file.url = url\n            } else {\n                message.error('上传视频失败')\n            }\n        } else if (file.status === 'removed') { // 删除图片\n            const result = await reqDeleteVideo(file.name)\n            if (result.status === 0) {\n                message.success('删除视频成功!')\n            } else {\n                message.error('删除视频失败!')\n            }\n        }\n\n        // 在操作(上传/删除)过程中更新fileList状态\n        this.setState({ fileList })\n    };\n\n    render() {\n        const { previewVisible, previewImage, fileList } = this.state;\n        const uploadButton = (\n            <div>\n                <Icon type=\"plus\" />\n                <div>Upload</div>\n            </div>\n        );\n        return (\n            <div>\n                <Upload\n                    action=\"/videoFile/uploads\" /*上传视频的接口地址*/\n                    accept=\".mp4, .rmvb, .avi\"  /*只接收视频格式*/\n                    name='video' /*请求参数名*/\n                    listType=\"picture-card\"  /*卡片样式*/\n                    fileList={fileList}  /*所有已上传图片文件对象的数组*/\n                    onPreview={this.handlePreview}\n                    onChange={this.handleChange}\n                >\n                    {fileList.length >= 100 ? null : uploadButton}\n                </Upload>\n\n                <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n                    <video alt=\"video\" style={{ width: '100%' }} src={previewImage} />\n                </Modal>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Card, Form, Input, Button, message, Select } from 'antd';\nimport VideoWall from './VideoWall'\nimport { reqAddVideos } from '../../api'\nimport './index.css'\nconst { TextArea } = Input\nconst { Item } = Form\nconst { Option } = Select;\n\nclass VideoUpload extends Component {\n    constructor(props) {\n        super(props)\n        // 创建用来保存ref标识的标签对象的容器\n        this.pw = React.createRef()\n    }\n    submit = () => {\n        // 进行表单验证, 如果通过了, 才发送请求\n        this.props.form.validateFields(async (error, values) => {\n            if (!error) {\n                //1.收集数据，2调用接口请求函数添加3.根据结果提示\n                const { title, desc, attr, main_actor, director } = values\n                const url = this.pw.current.getUrls()\n                const video = { title, desc, attr, url, main_actor, director }\n                const result = await reqAddVideos(video)\n                if (result.err === 0) {\n                    message.success('视频上传成功')\n                    this.props.history.push('/success', { video })\n                }\n                else {\n                    message.error('视频上传错误')\n                }\n            }\n        })\n    }\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 2 },//左侧的宽度\n                sm: { span: 2 },\n            },\n            wrapperCol: {\n                xs: { span: 14 },//右侧的宽度\n                sm: { span: 14 },\n            },\n        };\n\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <Card>\n                <Form {...formItemLayout}>\n                    <Item label=\"视频分类\">\n                        {getFieldDecorator('attr', {\n                            rules: [{ required: true, message: '必须选择视频分类!' }],\n                        })(\n                            <Select\n                                placeholder=\"请选择以下视频分类\"\n                                onChange={this.handleSelectChange}\n                            >\n                                <Option value=\"强军影视\">强军影视</Option>\n                                <Option value=\"练兵备战\">练兵备战</Option>\n                                <Option value=\"创意视频\">创意视频</Option>\n                                <Option value=\"强军新闻\">强军新闻</Option>\n                            </Select>,\n                        )}\n                    </Item>\n                    <Item label='视频名'>\n                        {\n                            getFieldDecorator('title', {\n                                initialValue: '',\n                                rules: [\n                                    { required: true, message: '必须输入视频名称' },\n                                    { max: 50, message: '输入标题过长' }//设置标题名过长错误提示的规则\n                                ]\n                            })(<Input placeholder='请输入视频名' />)\n                        }\n                    </Item>\n                    <Item label='导演'>\n                        {\n                            getFieldDecorator('director', {\n                                initialValue: '',\n                                rules: [\n                                    { required: true, message: '必须输入导演' },\n                                    { max: 30, message: '输入标题过长' }//设置标题名过长错误提示的规则\n                                ]\n                            })(<Input placeholder='请输入导演' />)\n                        }\n                    </Item>\n                    <Item label='演员'>\n                        {\n                            getFieldDecorator('main_actor', {\n                                initialValue: '',\n                                rules: [\n                                    { required: true, message: '必须输入主演' },\n                                    { max: 100, message: '输入标题过长' }//设置标题名过长错误提示的规则\n                                ]\n                            })(<Input placeholder='请输入导演' />)\n                        }\n                    </Item>\n                    <Item label='视频描述'>\n                        {\n                            getFieldDecorator('desc', {\n                                initialValue: '',\n                                rules: [\n                                    { required: true, message: '必须输入视频描述' },\n                                ]\n                            })(<TextArea autosize={{ minRows: 2, maxRows: 6 }} placeholder='请输入视频描述'></TextArea>)\n                        }\n\n                    </Item>\n                    <Item className='soft'>\n                        <VideoWall ref={this.pw} />\n                    </Item>\n                    <Item>\n                        <Button style={{ marginLeft: '14%' }}\n                            type='primary' block\n                            onClick={this.submit}>提交</Button>\n                    </Item>\n                </Form>\n            </Card>\n        )\n    }\n}\n\nexport default Form.create()(VideoUpload);","import React, { Component } from 'react';\nimport { Table, Divider, message, Modal, Select, Button, Input, Card, } from 'antd';\nimport { PAGE_SIZE } from '../../utils/constants';\nimport LinkButton from '../../components/link-button';\nimport { reqVideos, reqDeleteVideos, reqSearchVideos } from '../../api'\nconst { Column } = Table;\nconst Option = Select.Option\n\n\n\nclass VideoManage extends Component {\n    state = {\n        total: 0, // 商品的总数量\n        videos: [], // 的数组\n        loading: false,//是否正在加载中\n        searchName: '', // 搜索的关键字\n        searchType: 'videoName', // 根据哪个字段搜索\n    }\n    //获取指定页码的列表数据表示\n    getVideos = async (pageNum) => {\n        //发送请求之前，将loading效果设置为true\n        this.setState({ loading: true })\n        const { searchName, searchType } = this.state\n        let result\n        if (searchName) {\n            result = await reqSearchVideos({ pageNum, pageSize: PAGE_SIZE, searchName, searchType })\n        } else { // 一般分页请求\n            result = await reqVideos(pageNum, PAGE_SIZE)\n        }\n        this.setState({ loading: false })\n        if (result.status === 0) {\n            const { total, list } = result.data\n            console.log(list)\n            this.setState({\n                total,\n                videos: list\n            })\n        }\n    }\n    /*\n删除指定软件\n*/\n    deleteVideo = (video) => {\n        Modal.confirm({\n            title: `确认删除****[${video.title}]****吗?`,\n            onOk: async () => {\n                const result = await reqDeleteVideos(video.title)\n                if (result.err === 0) {\n                    message.success('删除视频成功!')\n                    this.getVideos(1)\n                } else if (result.err === -888) {\n                    message.error('登陆过期,请重新登陆')\n                } else {\n                    message.error('other error')\n                }\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.getVideos(1)\n    }\n    render() {\n        const { videos, total, loading, searchName, searchType } = this.state\n\n        const head = (\n            <span>\n                <Select\n                    value={searchType}\n                    style={{ width: 150 }}\n                    onChange={value => this.setState({ searchType: value })}\n                >\n                    <Option value='videoName'>按视频名搜索</Option>\n                    <Option value='videoDesc'>按描述搜索</Option>\n                    <Option value='videoAttr'>按类型搜索</Option>\n\n                </Select>\n                <Input\n                    placeholder='关键字'\n                    style={{ width: 150, margin: '0 15px' }}\n                    value={searchName}\n                    onChange={event => this.setState({ searchName: event.target.value })}\n                />\n                <Button type='primary' onClick={() => this.getVideos(1)}>搜索</Button>\n            </span>\n        )\n        return (\n            <Card title={head}>\n                <Table rowKey='_id' loading={loading}\n                    //分页的配置对象\n                    pagination={{ total, defaultPageSize: PAGE_SIZE, showQuickJumper: true, onChange: this.getVideos, }}\n                    dataSource={videos}>\n                    <Column title=\"视频名称\" dataIndex=\"title\" />\n                    <Column title=\"视频分类\" dataIndex=\"attr\" />\n                    <Column title=\"上传时间\" dataIndex='time' />\n                    <Column title=\"导演\" dataIndex='director' />\n                    <Column title=\"主要演员\" dataIndex='main_actor' />\n                    <Column\n                        title=\"处理\"\n                        key=\"action\"\n                        render={(video) => (\n                            <span>\n                                <LinkButton onClick={() => this.props.history.push('/media/videodetail', { video })}>详情</LinkButton>\n                                <Divider type=\"vertical\" />\n                                <LinkButton onClick={() => this.deleteVideo(video)}>删除</LinkButton>\n                            </span>\n                        )}\n                    />\n                </Table>\n            </Card>\n        )\n\n    }\n}\nexport default VideoManage;","import React, { Component } from 'react'\nimport { Card, Icon, List } from 'antd'\nimport './index.css'\nimport LinkButton from '../../components/link-button';\nimport { BASE_VIDEO_URL } from '../../utils/constants';\nimport { withRouter } from \"react-router-dom\";\nconst Item = List.Item\n\nclass VideoDetail extends Component {\n    render() {\n        const { title, url, desc, attr, time } = this.props.location.state.video\n        const titleHead = (\n            <span>\n                <LinkButton>\n                    <Icon type='arrow-left' style={{ marginRight: 15, fontSize: 30 }} onClick={() => this.props.history.goBack()} />\n                </LinkButton>\n                <span>视频详情</span>\n            </span>\n        )\n        return (\n            <Card title={titleHead} >\n                <Item className='article-detail'> <span className='left'>视频名：</span><span>{title}</span></Item>\n                <Item> <span className='left'>视频描述：</span><span>{desc}</span></Item>\n                <Item><span className='left'>视频分类：</span><span>{attr}</span></Item>\n                <Item>\n                    <span className='left'>视频地址封面：</span>\n                    <span>\n                        {url.map((item) => { return (<video className='detail-pic' src={BASE_VIDEO_URL + item} alt='video' />) })}\n                    </span>\n                </Item>\n                <Item><span className='left'>发布时间：</span><span>{time}</span></Item>\n            </Card>\n        )\n    }\n}\n\nexport default withRouter(VideoDetail) ","import React,{Component} from 'react';\nimport { Result, Button } from 'antd';\nimport {Link} from 'react-router-dom'\n\nclass Success extends Component {\n    \n    render(){\n        // const { title} = this.props.location.state.article\n       \n        return(\n            <Result\n              \n                status=\"success\"\n                title=\"投递完毕!\"\n                subTitle=\".\"\n                extra={[\n                    <Link key='1' to='/'><Button type=\"primary\" >回到首页</Button></Link>,\n                    // <Link key={{title}+1} to='/writenews'><Button >继续写文章</Button></Link>,\n                    // <Button onClick={this.props.history.push('/article/detail', { article })}>{title}</Button>\n                ]}\n            />\n        )\n    }\n}\nexport default Success;\n","import React, { Component } from 'react';\nimport { Table, Divider, message, Modal, Select, Button, Input, Card } from 'antd';\nimport { PAGE_SIZE } from '../../utils/constants';\nimport LinkButton from '../../components/link-button';\nimport { reqMailMessages, reqDeleteMail, reqSearchMails } from '../../api'\nconst { Column } = Table;\nconst Option = Select.Option\n\n\n\nclass MailManage extends Component {\n    state = {\n        total: 0, // 留言的总数量\n        Mailmessages: [], // 文章的数组\n        loading: false,//是否正在加载中\n        searchName: '', // 搜索的关键字\n        searchType: 'mailTitle', // 根据哪个字段搜索\n    }\n    //获取指定页码的列表数据表示\n    getMail = async (pageNum) => {\n        //发送请求之前，将loading效果设置为true\n        this.setState({ loading: true })\n        console.log(this.state)\n        const { searchName, searchType } = this.state\n        let result\n        if (searchName) {\n            result = await reqSearchMails({ pageNum, pageSize: PAGE_SIZE, searchName, searchType })\n        } else { // 一般分页请求\n            result = await reqMailMessages(pageNum, PAGE_SIZE)\n        }\n        this.setState({ loading: false })\n        if (result.status === 0) {\n            const { total, list } = result.data\n            console.log(list)\n            this.setState({\n                total,\n                Mailmessages: list\n            })\n        }\n    }\n    /*\n删除指定邮件\n*/\n    deleteMail = (Mailmessage) => {\n        Modal.confirm({\n            title: `确认删除[${Mailmessage.title}]吗?`,\n            onOk: async () => {\n                const result = await reqDeleteMail(Mailmessage._id)\n                if (result.err === 0) {\n                    message.success('删除通知成功!')\n                    this.getMail(1)\n                } else if (result.err === -888) {\n                    message.error('登陆过期,请重新登陆')\n                }\n                else if (result.err === -999) {\n                    message.error('没有权限查看')\n                }\n                else {\n                    message.error('other error')\n                }\n            }\n        })\n    }\n    componentDidMount() {\n        this.getMail(1)\n    }\n    render() {\n        const { Mailmessages, total, loading, searchName, searchType } = this.state\n\n        const head = (\n            <span>\n                <Select\n                    value={searchType}\n                    style={{ width: 150 }}\n                    onChange={value => this.setState({ searchType: value })}\n                >\n                    <Option value='mailTitle'>按邮件名搜索</Option>\n                    <Option value='mailAuthor'>按投递人搜索</Option>\n                    <Option value='mailContent'>按内容搜索</Option>\n                    <Option value='mailDepartment'>按投递单位搜索</Option>\n\n                </Select>\n                <Input\n                    placeholder='关键字'\n                    style={{ width: 150, margin: '0 15px' }}\n                    value={searchName}\n                    onChange={event => this.setState({ searchName: event.target.value })}\n                />\n                <Button type='primary' onClick={() => this.getMail(1)}>搜索</Button>\n            </span>\n        )\n        return (\n            <Card title={head}>\n                <Table\n                    rowKey='_id'\n                    loading={loading}\n                    //分页的配置对象\n                    pagination={{\n                        total,\n                        defaultPageSize: PAGE_SIZE,\n                        showQuickJumper: true,\n                        onChange: this.getMail,\n\n                    }}\n                    dataSource={Mailmessages}>\n                    <Column title='投递对象' dataIndex='leader'\n                        render={(leader) => (leader) === \"zz\" ? '站长' : (leader) === \"zw\" ? '政委' : (leader) === 'zr' ? '主任' : '纪委'} />\n                    <Column title=\"邮件名\" dataIndex=\"title\" />\n                    <Column title=\"投递人\" dataIndex=\"name\" />\n                    <Column title=\"投递单位\" dataIndex=\"department\" />\n                    <Column title=\"投递时间\" dataIndex='time' />\n                    <Column\n                        title=\"处理\"\n                        key=\"action\"\n                        render={(Mailmessage) => (\n                            <span>\n                                <LinkButton onClick={() => this.props.history.push('/mail/detail', { Mailmessage })}>详情</LinkButton>\n                                <Divider type='vertical' />\n                                <LinkButton onClick={() => this.deleteMail(Mailmessage)}>删除</LinkButton>\n                            </span>\n                        )}\n                    />\n                </Table>\n            </Card>\n        )\n\n    }\n}\nexport default MailManage;","import { Button, Card, Divider, message, Modal, Table } from 'antd';\nimport React, { Component } from 'react'\nimport { reqMailUncheckedMessages, reqMailUpdateStatus } from '../../api'\nimport LinkButton from '../../components/link-button';\nimport { PAGE_SIZE } from '../../utils/constants';\nconst { Column } = Table;\n\n\nexport default class MailCheck extends Component {\n    state = {\n        total: 0, // 未审核留言的总数量\n        UnCheckedMails: [], // 未审核留言的数组\n        loading: false,//是否正在加载中\n    }\n    //获取指定页码的列表数据表示\n    getUnCheckedMails = async (pageNum) => {\n        //发送请求之前，将loading效果设置为true\n        this.setState({ loading: true })\n        let result\n        result = await reqMailUncheckedMessages(pageNum, PAGE_SIZE)\n        this.setState({ loading: false })\n        if (result.status === 0) {\n            const { total, list } = result.data\n            this.setState({ total, UnCheckedMails: list })\n            console.log(list)\n        }\n    }\n    //审核mail\n    checkedMail = (mail) => {\n        Modal.confirm({\n            content: `确认阅读过来自${mail.department}的${mail.name}邮件:${mail.title}吗?`,\n            onOk: async () => {\n                const result = await reqMailUpdateStatus(mail.content)\n                console.log(result)\n                if (result.err === 0) {\n                    message.success('审核文章成功!')\n                    this.getUnCheckedMails(1)\n                } else if (result.err === -888) {\n                    message.error('时间过期，请先登陆')\n                } else if (result.err === -999) {\n                    message.error('没有该权限')\n                } else {\n                    message.error('其他错误')\n                }\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.getUnCheckedMails(1)\n    }\n    render() {\n        const { total, UnCheckedMails, loading } = this.state\n\n        return (\n            <Card>\n                <Table rowKey='_id' loading={loading}\n                    pagination={{\n                        total, defaultPageSize: PAGE_SIZE,\n                        showQuickJumper: true,\n                        onChange: this.getUnCheckedMails,\n                    }}\n                    dataSource={UnCheckedMails} >\n                    <Column title=\"投递对象\" dataIndex=\"leader\"\n                        render={(leader) => (leader) === \"zz\" ? '站长' : (leader) === \"zw\" ? '政委' : (leader) === 'zr' ? '主任' : '纪委'} />\n                    <Column title=\"标题\" dataIndex=\"title\" />\n                    <Column title=\"投递人\" dataIndex=\"name\" />\n                    <Column title=\"投递单位\" dataIndex=\"department\" />\n                    <Column title=\"投递时间\" dataIndex='time' />\n                    <Column\n                        title=\"处理\"\n                        key=\"action\"\n                        render={(Mailmessage) => (\n                            <span>\n                                <LinkButton onClick={() => this.props.history.push('/mail/detail', { Mailmessage })}>详情</LinkButton>\n                                <Divider type=\"vertical\" />\n                                <Button type='primary' onClick={() => this.checkedMail(Mailmessage)}>审阅</Button>\n                            </span>\n                        )}\n                    />\n                </Table>\n            </Card>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Card, Icon, List } from 'antd'\nimport LinkButton from '../../components/link-button';\nconst Item = List.Item\n\nexport default class MailDetail extends Component {\n    render() {\n        const { title, name, department, content } = this.props.location.state.Mailmessage\n        const titleHead = (\n            <span>\n                <LinkButton>\n                    <Icon\n                        type='arrow-left'\n                        style={{ marginRight: 15, fontSize: 30 }}\n                        onClick={() => this.props.history.goBack()}\n                    />\n                </LinkButton>\n                <span>邮件详情</span>\n            </span>)\n        return (\n            <Card title={titleHead} >\n                <Item className='article-detail'>\n                    <span className='left'>邮件名：</span>\n                    <span>{title}</span>\n                </Item>\n                <Item>\n                    <span className='left'>投递人单位：</span>\n                    <span>{department}</span>\n                </Item>\n                <Item>\n                    <span className='left'>投递人：</span>\n                    <span>{name}</span>\n                </Item>\n                <Item>\n                    <span className='left'>邮件正文：</span>\n                    <span>{content}</span>\n                </Item>\n            </Card>\n        )\n    }\n}\n","import React, { Component } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { Layout } from 'antd'\r\n\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport LeftNav from '../../components/left-nav'\r\nimport Header from '../../components/header'\r\nimport Home from '../home/home'\r\nimport WriteNews from '../newsmanage/WriteNews';\r\nimport ManageNews from '../newsmanage/ManageNews';\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\nimport NotFound from '../not-found/not-found'\r\nimport BannerManage from '../bannermanage/BannerManage';\r\nimport ArticleDetail from '../newsmanage/ArticleDetail';\r\nimport ManageNotice from '../noticesmanage/ManageNotice';\r\nimport WriteNotice from '../noticesmanage/WriteNotice';\r\nimport NoticeDetail from '../noticesmanage/Detail';\r\nimport WriteBookFile from '../bookfile/WriteNBookFile';\r\nimport BookFileManage from '../bookfile/BookFileManage';\r\nimport BookFileDetail from '../bookfile/BookFileDetail'\r\nimport writeMessage from '../departmentMessage/writeMessage';\r\nimport MessageManage from '../departmentMessage/MessageManage';\r\nimport MessageDetail from '../departmentMessage/detail';\r\nimport VideoUpload from '../video/VideoUpload';\r\nimport VideoManage from '../video/VideoManage';\r\nimport VideoDetail from '../video/VideoDetail';\r\nimport Success from '../../components/result/Success'\r\nimport MailManage from '../mail/MailManage'\r\nimport MailCheck from '../mail/MailCheck'\r\nimport MailDetail from '../mail/MailDetail'\r\n\r\n\r\nconst { Footer, Sider, Content } = Layout\r\n\r\n/*\r\n后台管理的路由组件\r\n */\r\nexport default class Admin extends Component {\r\n  render() {\r\n    const user = memoryUtils.user\r\n    // 如果内存没有存储user ==> 当前没有登陆\r\n    if (!user || !user._id) {\r\n      // 自动跳转到登陆(在render()中)\r\n      return <Redirect to='/login' />\r\n    }\r\n    return (\r\n      <Layout style={{ minHeight: '100%' }}>\r\n        <Sider>\r\n          <LeftNav />\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{ margin: 20, backgroundColor: '#fff' }}>\r\n            <Switch>\r\n              <Redirect from='/' exact to='/home' />\r\n              <Route path='/mail/detail' component={MailDetail}></Route>\r\n              <Route path='/mail/unchecked' exact component={MailCheck}></Route>\r\n              <Route path='/mail/checked' component={MailManage}></Route>\r\n              <Route path='/home' component={Home} />\r\n              <Route path='/success' component={Success}></Route>\r\n              <Route path='/writenews' component={WriteNews}></Route>\r\n              <Route path='/managenews' component={ManageNews}></Route>\r\n              <Route path='/noticesManage/manage' component={ManageNotice}></Route>\r\n              <Route path='/noticesManage/add' component={WriteNotice}></Route>\r\n              <Route path='/bannermanage' component={BannerManage}></Route>\r\n              <Route path='/mdeia/videoupload' component={VideoUpload}></Route>\r\n              <Route path='/media/videodetail' component={VideoDetail}></Route>\r\n              <Route path='/mdeia/videomanage' component={VideoManage}></Route>\r\n              <Route path='/bookfile/write' component={WriteBookFile}></Route>\r\n              <Route path='/bookfile/manage' component={BookFileManage}></Route>\r\n              <Route path='/bookfile/detail' component={BookFileDetail}></Route>\r\n              <Route path='/departmentMessage/write' component={writeMessage}></Route>\r\n              <Route path='/departmentMessage/manage' component={MessageManage}></Route>\r\n              <Route path='/departmentMessage/detail' component={MessageDetail}></Route>\r\n              <Route path='/article/detail' component={ArticleDetail}></Route>\r\n              <Route path='/notice/detail' component={NoticeDetail}></Route>\r\n              <Route path='/user' component={User} />\r\n              <Route path='/role' component={Role} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center', color: '#cccccc' }}>王冰制作</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}","import \"core-js\";\r\nimport \"regenerator-runtime/runtime\";\r\nimport React, {Component} from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n\r\n/*\r\n应用的根组件\r\n */\r\nexport default class App extends Component {\r\n\r\n\r\n  render () {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch> {/*只匹配其中一个*/}\r\n          <Route path='/login' component={Login}></Route>\r\n          <Route path='/' component={Admin}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}","/*\r\n入口js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// import 'antd/dist/antd.css'\r\n\r\nimport App from './App'\r\nimport storageUtils from './utils/storageUtils'\r\nimport memoryUtils from './utils/memoryUtils'\r\n\r\n// 读取local中保存user, 保存到内存中\r\nconst user = storageUtils.getUser()\r\nmemoryUtils.user = user\r\n\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}